// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// generators/templates/adapter_fiber.template
// generators/templates/case_create.template
// generators/templates/case_delete.template
// generators/templates/case_get_by_id.template
// generators/templates/case_list.template
// generators/templates/case_paginate.template
// generators/templates/case_patch.template
// generators/templates/controller_fiber.template
// generators/templates/controller_fiber_create.template
// generators/templates/controller_fiber_delete.template
// generators/templates/controller_fiber_get_by_id.template
// generators/templates/controller_fiber_list.template
// generators/templates/controller_fiber_paginate.template
// generators/templates/controller_fiber_patch.template
// generators/templates/factory.template
// generators/templates/gateway_gorm_adapter.template
// generators/templates/gateway_gorm_create.template
// generators/templates/gateway_gorm_delete.template
// generators/templates/gateway_gorm_get_by_id.template
// generators/templates/gateway_gorm_list.template
// generators/templates/gateway_gorm_paginate.template
// generators/templates/gateway_gorm_patch.template
// generators/templates/gateway_interface.template
// generators/templates/gorm_model.template
// generators/templates/http_interface.template
// generators/templates/parse_body_fiber.template
// generators/templates/routes_fiber.template
// generators/templates/usecase.template
package utils

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _generatorsTemplatesAdapter_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x6b\xe3\x30\x10\x85\xcf\x36\xf8\x3f\x0c\x3e\x2c\xf6\xee\x62\xc1\x1e\x03\x7b\x08\x85\xd2\x42\x29\x85\xa4\xe7\xa0\xd8\x63\x47\x4d\x6c\x4d\x47\xa3\x98\x62\xfc\xdf\x8b\xe4\x34\xe4\x56\x7a\x33\x7e\xdf\x7b\xbc\x37\x22\x5d\x1f\x75\x87\x70\x10\xa1\x2c\xcd\x52\xd3\x93\x65\x81\x22\x4b\x93\x7c\x9a\x88\xed\x1b\xd6\xb2\x1b\x74\x8f\xf3\xac\x5a\xd6\x3d\x8e\x96\x8f\x4e\x05\x5e\xb5\x66\x8f\xbc\xd3\x8d\x26\x41\x56\x6c\xbd\xa0\xcb\x43\x4a\x92\x77\x46\x0e\x7e\x5f\xd5\xb6\x57\x9d\x8d\xdc\x42\xab\xf3\xbf\xfc\x1b\x5d\xf5\xa6\x69\x4e\x38\x6a\x46\x55\x5b\x76\x3f\xe1\x19\xdf\x3d\x3a\x31\x4d\x9e\xa5\x65\x68\x22\x1f\x84\x10\xc9\xf5\x52\x13\x9c\xb0\xaf\x05\xa6\x2c\x4d\x34\x11\xfc\x8e\x62\xb5\x26\xca\xd2\x39\x38\x5a\x3f\xd4\x50\xb4\x17\xe1\xe2\x2a\x61\x23\x9a\xa5\x88\xc7\x71\xc2\x66\xe8\x4a\x40\x66\xcb\x31\x88\x51\x3c\x0f\xd0\x56\x9a\xa8\x7a\x32\x4e\x70\x28\xf2\x55\x0e\x7f\x20\x18\xca\xdb\xe4\x01\xc7\xfb\x10\x5c\x94\xf0\xb0\xdd\xbe\x6c\x90\xcf\xc8\xd7\x36\xab\xff\x4b\xd9\xea\x19\xc7\x62\xf9\xba\xb3\x43\x6b\xba\x00\x24\x8f\x7d\xef\x45\xef\x4f\xb8\x02\x61\x8f\x7f\xb3\x34\x99\xe3\xca\xe0\xad\x5e\x1d\x86\x67\x4b\xc2\xcd\xa2\xbf\x0c\x40\x79\xfd\x7f\xbd\xcd\x8d\x18\xcd\xd3\xb4\x3c\xdd\x1c\x5b\x7e\x8d\xf9\x75\xbb\x7f\xd2\x44\x73\x9c\xf1\x19\x00\x00\xff\xff\xf7\xa3\x99\x14\x31\x02\x00\x00")

func generatorsTemplatesAdapter_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesAdapter_fiberTemplate,
		"generators/templates/adapter_fiber.template",
	)
}

func generatorsTemplatesAdapter_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesAdapter_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/adapter_fiber.template", size: 561, mode: os.FileMode(438), modTime: time.Unix(1698721053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8e\xd1\x8a\x83\x30\x10\x45\x9f\x0d\xe4\x1f\x06\x9f\x74\x29\xfa\x11\x3e\xed\x57\xc8\xec\x38\x4a\xb6\x35\x86\xc9\x48\xdb\x0d\xf9\xf7\x45\x1b\x4a\x9f\x06\x86\x7b\xcf\x3d\x01\xe9\x8a\x0b\x43\x4a\x1e\x57\xce\x79\x24\x8c\x6c\x8d\x35\x6e\x0d\x9b\x28\x34\xd6\x54\x35\x6d\x5e\xf9\xa1\xb5\x35\xd5\x02\x75\x4a\x41\xb6\x5f\x26\x1d\x5f\x95\x7e\x16\x5c\xf9\xbe\xc9\x35\xf6\x13\x2a\xfe\x60\xe4\x7e\x41\xe5\x3b\x3e\x63\xff\x06\x97\x4f\x6d\x4d\x7b\xf0\xf5\x19\x18\x06\x61\x54\xfe\xf6\x61\x57\x88\x2a\x3b\x29\x24\x6b\xaa\x94\x66\xc7\xb7\x29\xe6\x6c\x4d\x3e\xc2\xf3\xee\x09\x1a\x2a\x96\x23\x61\x70\x8a\x37\xf7\xc7\x53\xce\x03\x46\x6e\x0b\xa9\x21\x7d\x40\xb1\xed\x86\xd7\xbd\x80\x3b\xf9\x5f\x1f\x63\x2d\x34\x51\xc5\xf9\xe5\x02\x2c\xb2\x49\x7b\xce\x0a\xeb\x2e\x1e\xa8\x2b\xaa\x5d\x81\x2e\xdd\x47\xf5\x08\x56\x29\xe1\x84\x41\xc7\x93\x7c\x58\x56\xb9\x3d\x55\xff\x03\x00\x00\xff\xff\xe7\x43\x28\xb7\x4f\x01\x00\x00")

func generatorsTemplatesCase_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_createTemplate,
		"generators/templates/case_create.template",
	)
}

func generatorsTemplatesCase_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_create.template", size: 335, mode: os.FileMode(438), modTime: time.Unix(1698721573, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x41\x8a\x84\x40\x0c\x85\xe1\xb5\x81\xdc\x21\xb8\xaa\x02\xf1\x12\xce\x3d\x24\x13\x33\x52\x8c\x56\x49\x8c\xb4\xdd\x52\x77\x6f\x9a\x76\xf5\x16\x8f\xef\xdf\x58\xfe\x79\x56\xba\xae\xcc\xab\xd6\x3a\x0a\xef\x8a\x80\x90\xd6\xad\x98\x53\x40\x68\x5a\x29\xd9\xf5\xf4\x16\x21\x7e\xae\xbf\x23\x0b\x05\xb9\xcd\x28\xbc\x25\xe7\x25\xbd\x74\xaa\x75\xe0\x5d\x23\xfd\xe8\xa2\xae\x41\xfc\xa4\xdb\xf6\xc3\x77\x3b\x4a\x13\xed\x6e\x29\xcf\x91\xc2\x6f\x29\x4b\x47\x6a\x56\x2c\xd2\x85\xd0\x98\xfa\x61\x99\xa4\x9f\xd9\xf5\xc1\xcf\xfe\x2e\xa5\x29\x22\x54\x84\x77\x00\x00\x00\xff\xff\x87\x36\x31\x49\xaf\x00\x00\x00")

func generatorsTemplatesCase_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_deleteTemplate,
		"generators/templates/case_delete.template",
	)
}

func generatorsTemplatesCase_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_delete.template", size: 175, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\x51\x6a\xc3\x30\x0c\x40\xbf\x63\xf0\x1d\x44\xbe\xec\x51\x92\x3b\xac\x83\xb1\xaf\x1d\x21\x68\x8e\x6a\xbc\x2e\xb6\x91\x15\xda\xce\xf8\xee\x63\xc4\xdb\x97\x40\x3c\xbd\xa7\x8c\xee\x8a\x9e\xa0\xd6\x88\x1b\xb5\xb6\x38\x2c\xa4\x95\x56\x61\xcb\x89\x05\x8c\x56\xc3\xe8\x52\x14\xba\xcb\xa8\xd5\xe0\x61\xac\x35\x73\xfa\x24\x27\xcb\x71\x32\x5f\x18\x37\xba\x25\xbe\x96\x79\x45\xc1\x0f\x2c\x34\x7b\x14\xba\xe1\xa3\xcc\xff\xe2\xbe\x19\xb5\xb2\xbf\xfe\xcb\x1e\x1d\x18\xd7\xc3\x8b\xc3\x1c\x04\xbf\xc2\x37\xad\xad\x9d\xb1\x90\x85\x57\x92\xe7\xc7\xdb\x8b\x71\x72\x87\xfe\xc1\x74\x3e\xe6\x09\xc2\x0a\x45\x38\x44\x6f\xc1\x3c\xf9\xa9\xb3\xef\xbb\xe4\x5d\x4e\x40\xcc\x89\x2d\x54\xad\x06\x26\xd9\x39\x82\x9b\x7a\xff\x0f\x35\x61\xb5\x5a\x35\xad\x7e\x02\x00\x00\xff\xff\xe3\x16\x53\x45\x02\x01\x00\x00")

func generatorsTemplatesCase_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_get_by_idTemplate,
		"generators/templates/case_get_by_id.template",
	)
}

func generatorsTemplatesCase_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_get_by_id.template", size: 258, mode: os.FileMode(438), modTime: time.Unix(1698721571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8e\xd1\x6a\xc4\x20\x10\x45\x9f\x23\xf8\x0f\x43\x9e\x12\x58\x92\x8f\xd8\xa7\x42\xa1\x1f\x50\x4a\x98\x9a\x49\xb0\x9b\xa8\xe8\xc8\xee\x56\xfc\xf7\x45\x13\xf6\x49\x1c\xee\x3d\xf7\x38\x54\x37\x5c\x09\x52\x32\xb8\x53\xce\x93\xc2\x40\x52\x48\xa1\x77\x67\x3d\x43\x27\x45\xd3\x2a\x6b\x98\x1e\xdc\x4a\xd1\xac\xd0\xa6\xe4\xbc\xfd\x23\xc5\xd3\x51\x19\x17\x8f\x3b\xdd\xad\xbf\x85\x71\x46\xc6\x5f\x0c\x34\xae\xc8\x74\xc7\x67\x18\xdf\xe0\xf3\xd2\x4a\xd1\x17\x3e\x3f\x1d\xc1\xa7\x0e\xfc\x61\x5c\x64\x08\xec\xa3\x62\x48\x52\x34\x29\x2d\x9a\xb6\x39\x4c\xd6\xb1\xb6\x06\xb7\x9c\xa5\xc8\xa5\xb3\x44\xa3\xa0\x53\xa7\xec\xa4\xd0\x69\xc6\x4d\xff\xd3\x9c\xf3\x15\x03\xf5\x15\xd8\x29\x7e\xc0\xa9\x3c\x5c\x8f\xf7\x02\xba\xce\xbc\x07\x7b\xe8\xbe\x7f\xd6\xa1\xfc\xbf\x22\xbb\xc8\x17\x20\xef\xad\xef\xab\x82\x27\x8e\xde\x80\x1a\x4e\xe9\x9a\xeb\x8e\x78\xad\x97\x50\x93\x12\xce\xe8\x78\xaa\xe8\x22\xd9\xe4\xbe\x9a\xbe\x02\x00\x00\xff\xff\x3d\x97\x51\x99\x55\x01\x00\x00")

func generatorsTemplatesCase_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_listTemplate,
		"generators/templates/case_list.template",
	)
}

func generatorsTemplatesCase_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_list.template", size: 341, mode: os.FileMode(438), modTime: time.Unix(1698721571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\x41\x6a\xeb\x30\x10\x86\xd7\x16\xe8\x0e\x83\x57\xf6\x23\xc4\x87\x08\x3c\xe8\xaa\xbd\x81\x99\xca\x13\xa3\xc6\x96\xc4\x68\x4c\x92\x0a\xdd\xbd\x28\xb1\x1d\xe8\xaa\x2b\xa1\xe1\xfb\x67\xfe\x2f\xa0\xb9\xe0\x48\x90\x92\xc3\x99\x72\xee\x0d\x46\xd2\x4a\x2b\x3b\x07\xcf\x02\x8d\x56\x55\x6d\xbc\x13\xba\x49\xad\x55\x35\xa0\xe0\x27\x46\x82\x3a\xa5\xc0\xfe\x8b\x8c\xf4\xcf\x64\x77\x66\x9c\xe9\xea\xf9\x12\xbb\x8d\xea\x46\xcf\x73\x89\x8d\x7f\xe5\x51\xe8\x8a\xf7\xd8\xed\x7d\xd6\x49\xad\x55\x5b\x6a\xc9\x3d\x10\x7c\xe0\x68\x1d\x0a\xfd\xb7\x93\x10\x43\x14\x5e\x8c\x40\xd2\xaa\x4a\xe9\x6c\x69\x1a\x62\xef\x83\x58\xef\x70\xca\x59\xab\x5c\x82\xe7\xc5\x19\x68\xcc\x2a\xda\x1b\x0c\x56\x70\xb2\xdf\x34\xe4\x7c\xc2\x48\xed\xbe\xb5\x31\x72\x83\x55\xf9\x78\x7a\xbe\x07\xb0\x2e\x2c\xf2\xeb\xf2\x01\xc2\xfa\x87\xcd\xe0\xb8\x11\x6f\x85\x6f\xa1\xf9\x37\xee\xa3\xf7\x45\xc2\x22\x07\x20\x66\xcf\xed\xa3\x2f\x93\x2c\xec\xc0\x1c\x57\xcd\x9d\x6d\x5e\xb1\xe7\xad\x42\x57\x29\xe1\x80\x41\xfa\x47\x99\xa2\x56\xe5\x57\x87\xf6\x61\xfa\x13\x00\x00\xff\xff\xcd\x1a\xab\x64\xd1\x01\x00\x00")

func generatorsTemplatesCase_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_paginateTemplate,
		"generators/templates/case_paginate.template",
	)
}

func generatorsTemplatesCase_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_paginate.template", size: 465, mode: os.FileMode(438), modTime: time.Unix(1698721571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8f\xc1\x6a\xf3\x30\x10\x84\xcf\x12\xe8\x1d\x16\x9f\xec\x1f\x63\xdf\xff\x6b\x42\x21\xb7\x9e\x7a\x35\x1b\x79\xed\xba\x71\x2c\x21\xad\x9b\xa4\x42\xef\x5e\x12\xa9\xc1\x39\x2d\x2c\x33\xdf\xcc\x58\xd4\x27\x1c\x09\x42\x58\xf0\x4c\x31\x76\x1a\x3d\x29\xa9\xe4\x74\xb6\xc6\x31\x94\x4a\x8a\x42\x9b\x85\xe9\xca\x85\x92\x62\x84\x22\x04\xeb\xcc\x17\x69\xee\x92\xa5\x1d\x1c\x9e\xe9\x62\xdc\xc9\xb7\x3d\x32\x1e\xd1\x53\x3b\x22\xd3\x05\x6f\xbe\x7d\x82\xf3\xa7\x50\xb2\xba\xf3\xf9\x66\x09\xde\x91\xf5\xe7\xdb\x34\x33\x39\xf0\xec\x56\xcd\x10\x94\x14\x87\x3d\xfc\xf3\xec\xa6\x65\x54\x52\x84\x30\x4c\x34\xf7\xbe\x33\x96\x27\xb3\xe0\x1c\xa3\x92\xf1\x15\xf1\x81\xf3\x4a\x7e\x8b\xf8\x73\x3d\xc5\xc3\xba\x68\x28\x75\x1e\xda\x69\xb4\x13\xe3\x3c\xfd\x50\x1f\xe3\x0e\x3d\x55\x89\x54\x6a\xbe\x42\xde\xdb\xec\xd2\xad\x61\x48\x15\x37\x75\x6b\xf8\x4e\x99\x9b\xfc\x0a\xca\xa3\x31\x73\x0d\xe4\x9c\x71\xd5\xa3\x87\x23\x5e\xdd\x02\xba\xc9\xf3\x9b\x94\xa2\xa4\x10\x63\xb3\xe1\xdd\xb5\x42\x1c\xf6\xff\x73\x56\x73\xd8\xd7\x8f\x57\x08\xd8\xa3\xe5\x2e\xbd\xef\x73\x84\x88\x35\x64\x73\x0a\x0e\x2f\xca\x54\x2c\x2b\xab\xc7\xfc\xdf\x00\x00\x00\xff\xff\xd7\x62\x43\x45\xe6\x01\x00\x00")

func generatorsTemplatesCase_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_patchTemplate,
		"generators/templates/case_patch.template",
	)
}

func generatorsTemplatesCase_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_patch.template", size: 486, mode: os.FileMode(438), modTime: time.Unix(1698721571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\xaa\xc2\x30\x10\x45\xd7\x0d\xe4\x1f\x86\x2e\x1e\xed\x5b\xbc\x7e\xc4\xdb\xfb\x0b\x65\x18\x47\xa9\xb6\x49\x98\x4c\x10\x0d\xf9\x77\xa9\x56\x45\x10\xc5\xfd\x3d\xf7\x9c\x80\xb4\xc7\x2d\x43\xce\x0e\x27\x2e\xa5\x27\xef\x54\xfc\x38\xb2\x58\x63\xcd\x30\x05\x2f\x0a\x8d\x35\x55\x9d\x73\x10\xbf\x63\xd2\xfe\x3a\xed\x52\x64\xc2\xc8\xb1\x7b\xc0\x18\xb9\xb6\xa6\x9d\x51\x3d\x86\xdb\x6d\x4f\x18\x06\xc5\x71\x38\xf1\xba\x94\xff\xbb\x01\xa2\x4a\x22\x85\x6c\x4d\xb5\x9c\xc1\xd3\xd7\xdf\x4b\x1e\x23\x5b\x53\x66\xc7\x26\x39\x82\x15\x1f\x9a\xef\xe8\x16\x7e\x3f\x84\xcd\x45\xc2\x9a\xc4\xc1\xcf\xfb\x69\x5e\xd4\xe5\x92\x74\x0e\x00\x00\xff\xff\xe8\xa8\xf1\x43\x4f\x01\x00\x00")

func generatorsTemplatesController_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiberTemplate,
		"generators/templates/controller_fiber.template",
	)
}

func generatorsTemplatesController_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber.template", size: 335, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xc1\x4e\xb4\x30\x14\x85\xd7\x34\xe9\x3b\xf4\x67\xf1\xa7\x35\x93\xa2\xb3\xd4\xcc\xc6\x59\xe9\x42\x4d\x78\x80\x49\xa7\x5c\xb0\xca\xb4\xe4\x72\x31\x28\xe9\xbb\x1b\xca\x84\xd1\x85\x1b\x36\x9c\xef\x3b\xe7\xb6\x33\xf6\xdd\x34\x20\xa6\xc9\x9b\x13\xc4\x78\xb0\xc1\x13\x86\xb6\x05\xe4\x8c\x33\x77\xea\x02\x92\x90\x9c\x65\xf9\x34\x75\x18\xde\xc0\xd2\x61\x89\x16\x43\x0f\xd6\xf4\xd0\x17\x17\xd8\xf4\x90\xcf\x5c\x96\x37\x8e\x5e\x87\xa3\xb6\xe1\x54\x34\xa1\x76\x47\xc0\x62\xf9\x7e\x6c\x73\xce\xd4\x1c\xaa\x07\x6f\x85\xb4\xe7\xee\x83\x35\x9d\x23\xd3\xba\x2f\xa8\x62\xdc\xaf\x33\x94\xd8\x23\x18\x02\x69\x69\x14\x57\xc9\xa1\xf7\x34\x2a\x01\x88\x01\xc5\xc4\x59\x56\x19\x32\xe2\x76\x27\xfe\xff\x1a\xa2\x17\xee\xc1\x77\x03\x4d\x91\xb3\xcc\xd5\x33\x33\x07\x2d\x8d\xfa\x3e\x54\x9f\x2f\x06\x7b\x40\x39\xf3\xea\x2e\xfd\xfc\xb7\x13\xde\xb5\xc9\x9a\x21\xd0\x80\x3e\x85\x1f\xcb\xe7\x27\x09\x88\x8a\xb3\x2c\xa6\x03\x5d\xb5\x59\x6d\xfa\xfc\x12\xfa\xb2\x54\xcf\x07\xc0\x48\x52\x6d\x44\xd2\x2f\x50\xfd\x57\x09\x20\xae\xea\x1f\xbd\x25\x19\x1a\x7a\xb9\xbd\xbe\x51\xba\x04\x5f\x95\x84\xce\x37\xd2\x55\x8a\xb3\xc8\xd9\x77\x00\x00\x00\xff\xff\x4b\xa5\xc5\xc9\xbe\x01\x00\x00")

func generatorsTemplatesController_fiber_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_createTemplate,
		"generators/templates/controller_fiber_create.template",
	)
}

func generatorsTemplatesController_fiber_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_create.template", size: 446, mode: os.FileMode(438), modTime: time.Unix(1697858571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x6a\xc3\x30\x10\x45\xd7\x12\xe8\x0e\x53\xaf\xa4\x12\x94\x12\xb2\x2a\x64\x95\x1e\xa0\x90\x03\x04\x45\x9a\xb8\xa2\xb6\x64\xc6\xe3\x62\x6a\x74\xf7\x62\x35\x4d\x29\x74\xa3\x85\x78\xff\xbd\x19\x9c\x7f\x77\x2d\xc2\xb2\x24\xd7\x63\x29\x67\x9f\x13\x53\xee\x3a\x24\x25\x95\x8c\xfd\x90\x89\x41\x2b\x29\x9a\x36\xf2\xdb\x74\xb1\x3e\xf7\xdb\x36\x5f\xe3\x05\x69\xfb\xfd\x7e\xec\x1a\x25\xcd\x8a\x5f\xa7\xe4\x41\xfb\x9b\xed\xec\xdd\x10\xd9\x75\xf1\x13\x43\x29\xc7\xbb\xd8\xc0\x0b\x76\xc8\xa8\x3d\xcf\xf0\x58\x1d\xf6\xc8\xb3\x01\x24\xca\x04\x8b\x92\x22\x06\x78\x3e\x80\xe7\xd9\xbe\x3a\x72\xfd\xa8\x9b\x18\x1a\xa3\xa4\x08\x75\x19\x36\x2b\x5b\x11\x3b\x8d\xe8\xdd\x88\xf6\xd7\x69\xd7\x14\xce\xac\xcd\x06\x62\xa8\x87\x89\x78\xad\x8b\x87\x03\xa4\xd8\xd5\x84\x20\xe4\x89\xd2\xfa\xad\xa4\x28\x3f\xd4\x2d\xf0\x07\x59\x9d\x27\x4c\xe1\xc4\x8e\xa7\x51\xef\x9e\xf6\xe6\x3e\xf9\x1f\xd9\x57\xa4\x28\xf9\x15\x00\x00\xff\xff\x5d\x40\xeb\xa1\x60\x01\x00\x00")

func generatorsTemplatesController_fiber_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_deleteTemplate,
		"generators/templates/controller_fiber_delete.template",
	)
}

func generatorsTemplatesController_fiber_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_delete.template", size: 352, mode: os.FileMode(438), modTime: time.Unix(1697855909, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\xc1\x4a\xc4\x30\x10\x86\xcf\x0d\xe4\x1d\xc6\x9e\x12\x59\xb2\x22\x7b\x12\x7a\x71\x05\xd1\x83\x0a\x7d\x80\x25\x9b\x4c\x6b\xb0\x4d\x4a\x3a\x95\x6a\xc9\xbb\x4b\xba\xba\x2c\x78\x99\xc3\xf0\xfd\xdf\x37\x68\xf3\xa1\x5b\x84\x65\xf1\xba\xc7\x94\x0e\x26\x78\x8a\xa1\xeb\x30\x72\xc6\x99\xeb\x87\x10\x09\x04\x67\x45\xd9\x3a\x7a\x9f\x8e\xca\x84\x7e\xdb\x86\xc6\x1d\x31\x6e\x4f\xf7\xf3\xb6\xe4\x4c\x66\xbc\x99\xbc\x01\x61\x7e\x6d\x07\xa3\x07\x47\xba\x73\xdf\x68\x53\xda\x9f\xc5\x12\x1e\x91\xee\xbf\x9e\x1e\x84\xa1\x19\xae\x57\x89\xda\xd3\x2c\x01\x63\x0c\x11\x16\xce\x0a\x67\xe1\xae\x02\x43\xb3\x7a\xd3\x51\xf7\xa3\x28\x9d\x2d\xd7\x46\x61\x35\xe9\x4d\x46\x57\x42\x4d\x23\x1a\x3d\xa2\xba\x70\xaa\xdc\xc2\x99\x84\xdc\x80\xb3\xa7\x95\x6b\xd6\xc9\x55\x05\xde\x75\x6b\xa2\x88\x48\x53\xf4\xf9\xcd\x59\x91\xfe\xa8\xac\x87\xea\x3f\x96\xbd\x35\x7a\x5b\x93\xa6\x69\x14\xbb\x9b\x9d\x3c\xcf\x2e\x90\xe7\xfa\xf5\x45\x64\x87\xe4\x2c\x71\xf6\x13\x00\x00\xff\xff\x3a\x57\x66\xde\x60\x01\x00\x00")

func generatorsTemplatesController_fiber_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_get_by_idTemplate,
		"generators/templates/controller_fiber_get_by_id.template",
	)
}

func generatorsTemplatesController_fiber_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_get_by_id.template", size: 352, mode: os.FileMode(438), modTime: time.Unix(1697855937, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x90\xcf\x4e\x03\x21\x10\xc6\xcf\x4b\xc2\x3b\xe0\x1e\xcc\xae\x69\xd8\xc4\xa3\xa6\xa7\x9e\x34\xc6\x3f\xf1\x01\x1a\x8a\xb3\x15\xa5\xb0\x19\x06\xb3\x4a\x78\x77\x03\x5b\x6b\x3c\x79\xe1\x30\xcc\xf7\xfb\x7e\x30\x29\xfd\xae\xf6\x20\x52\x72\xea\x00\x39\x6f\xb5\x77\x84\xde\x5a\x40\xce\x38\x33\x87\xc9\x23\x89\x8e\xb3\xa6\x4d\x69\x42\xff\x06\x9a\xb6\xcb\xea\x10\x03\x68\x15\x20\x0c\xbf\x61\x15\xa0\x2d\xb9\xa6\xdd\x1b\x7a\x8d\x3b\xa9\xfd\x61\xd8\xfb\xd1\xec\x00\x87\xe5\xfc\xb8\x6c\x39\xeb\xcb\xd2\x18\x9d\x16\x9d\x3e\x76\x6f\xb5\x9a\x0c\x29\x6b\xbe\xe0\x25\xe7\xcd\x49\xa3\x17\x77\x26\x50\xa7\x69\x16\x17\x95\x20\x37\x34\xf7\x02\x10\x3d\x8a\xc4\x59\x33\x1a\x4b\x80\xe2\x6a\x2d\xce\xff\x88\xc8\x92\xbb\x71\x53\xa4\x94\x39\x6b\xcc\x58\x32\x65\x4d\xd3\x2c\x9f\x22\xe0\xe7\xa3\xc2\x00\xd8\x2d\x80\xfe\xba\xde\x9f\xad\x85\x33\xb6\x82\x1b\x04\x8a\xe8\xca\x98\xb3\x26\xd7\x77\x21\x84\x68\x69\x75\x42\xc9\xe3\x27\xc8\x1f\x49\x59\xcc\x61\xa6\xae\x5f\x15\xdf\x4a\xae\xc9\x63\xff\xbf\xfc\x3a\x2a\xa0\xdb\xe7\x87\xfb\x6e\xe9\xeb\x39\xcb\x9c\x7d\x07\x00\x00\xff\xff\x58\x9b\x09\xb2\xac\x01\x00\x00")

func generatorsTemplatesController_fiber_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_listTemplate,
		"generators/templates/controller_fiber_list.template",
	)
}

func generatorsTemplatesController_fiber_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_list.template", size: 428, mode: os.FileMode(438), modTime: time.Unix(1697859049, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x92\xcf\x8e\xd3\x30\x10\xc6\xcf\xb1\xe4\x77\x18\x7c\x40\x09\xaa\x12\xe0\x58\xd4\x03\x5a\x09\x09\x0e\x50\xb4\x0f\x50\xb9\xde\x49\x30\x9b\xd8\xd1\x78\xb2\x94\x8d\xf2\xee\xc8\xce\x9f\x82\xb8\x74\x73\x88\x14\x67\xe6\xf7\xcd\xf7\x8d\x7b\x6d\x1e\x75\x83\x30\x8e\x4e\x77\x38\x4d\x27\xe3\x1d\x93\x6f\x5b\x24\x29\xa4\xb0\x5d\xef\x89\x21\x97\x22\x7b\xd0\xac\xcf\x3a\x20\xa8\x71\xec\xc9\xff\x44\xc3\xa7\xb9\xa7\xaa\x49\x77\xf8\xcb\xd3\x63\xa8\xd6\xaa\xaa\xf1\xd4\x29\x29\xb2\xff\xab\x87\x80\x46\x07\x0c\xd5\x55\x53\x07\x4c\xb5\x81\xc9\x78\xf7\xa4\xa2\x74\xa6\x1a\xcb\x3f\x86\x73\x69\x7c\x57\x35\xbe\xb6\x67\xa4\x6a\x7e\x3f\xbd\x57\x52\x14\xb1\xa8\x1e\x9c\x81\xdc\x2c\xe3\x9f\x8c\xee\x2d\xeb\xd6\x3e\xe3\xc3\x34\xdd\x6d\x4e\x0a\x38\xea\xc6\x3a\xcd\x98\x1b\xbe\xc0\x9b\x44\x29\xef\xf8\x52\x00\x12\x79\x82\x51\x8a\xac\xd7\x0d\xee\xe2\x37\xec\x0f\xb0\x0c\x52\x7e\x64\x6f\x63\x4f\xf9\x7d\x40\xfa\x9d\xab\xa3\x6e\x50\xed\x40\xbd\x55\x45\x21\x45\x66\xeb\xd4\xf0\xea\x00\xce\xb6\x89\x92\x11\xf2\x40\x2e\x1e\x4b\x91\x4d\xc9\x48\x24\xdf\xdb\xe7\xdb\xe8\xb1\x30\x2a\xbc\x7b\x91\x44\x6d\x5b\xc6\xc4\xfe\x27\xd4\x72\xf5\xfd\x29\xfd\x1f\xa7\x2b\xf0\x00\x9b\xf0\x51\x53\x40\xca\x5f\xcf\x90\xe2\xc3\x8d\x9e\x12\x38\x4a\xae\x3b\xdf\xd4\x3e\xbb\x7e\xe0\xd4\x19\x1d\xed\x21\x3e\x29\xde\xf5\x28\x9a\xdc\xc3\x96\xcb\x46\x25\x0c\x43\xcb\x5b\x4e\xa6\x5c\xee\x4a\xf9\xf7\xfe\xca\xb8\x58\xbc\x70\x5e\xec\x60\x1e\x79\x07\xeb\x38\xe9\x52\xdc\x98\xd9\x72\x14\x89\x5f\xee\xbf\x7d\xcd\x67\xf1\x42\x8a\x49\x8a\x3f\x01\x00\x00\xff\xff\xf5\xc7\x7d\xf6\x17\x03\x00\x00")

func generatorsTemplatesController_fiber_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_paginateTemplate,
		"generators/templates/controller_fiber_paginate.template",
	)
}

func generatorsTemplatesController_fiber_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_paginate.template", size: 791, mode: os.FileMode(438), modTime: time.Unix(1697856079, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x8b\xdb\x30\x10\x85\xcf\x16\xe8\x3f\xa8\x3e\x04\xab\x18\x3b\x2c\x7b\xda\xb2\x97\x6e\x29\xb4\x87\x76\x21\xd0\x6b\x98\x95\xc6\x89\xba\xb6\x25\x46\xe3\x36\xad\xf1\x7f\x2f\x52\xd2\x84\x52\x9f\xf5\xe6\x7d\x9f\x5e\x00\xf3\x0a\x07\x54\xf3\x3c\xc2\x80\xcb\xb2\x37\x7e\x64\xf2\x7d\x8f\x24\x85\x14\x6e\x08\x9e\x58\x55\x52\x14\xe5\x3c\x07\xf2\xdf\xd1\xf0\xfe\x1c\x6d\x3b\x82\x01\x7f\x7a\x7a\x8d\xed\x91\x39\xb4\x9d\x7b\x41\xda\x83\x85\xc0\x48\x6d\x00\x8a\x48\xe5\xea\xe5\x14\xd1\x40\xc4\xd8\xde\xb0\x10\xb1\x4c\xc4\xa2\x3c\x38\x3e\x4e\x2f\x8d\xf1\x43\x7b\xf0\xb9\xf3\xdc\xdc\xfe\xb8\x2b\xa5\xd0\x29\xd4\x4d\xa3\x51\x95\xb9\x58\xef\x0d\x04\xc7\xd0\xbb\xdf\x68\x97\xe5\xe9\xfa\x01\xad\x9e\x81\xcd\xb1\x32\x7c\x52\x6f\x73\x45\xf3\xc4\x27\xad\x90\xc8\x93\x9a\xa5\x28\x9c\x55\x0f\x8f\xca\xf0\xa9\x79\x06\x82\x21\x56\xa5\xb3\xa5\x96\xa2\xe8\x5c\xcf\x48\xe9\x71\xf3\x8f\x62\x93\x1b\x3f\xe6\xd7\x54\x50\x7c\xfa\xf0\xa0\x36\xce\xd6\x52\x14\x4b\xd6\xb7\xc0\x90\xee\x56\xce\xbe\x41\x3f\x61\x9c\x97\x04\xee\x92\x45\xca\x9d\x67\x4a\xfc\x88\xef\xbd\xfd\x95\x6c\x6b\xb5\x49\x35\xfa\x5d\x0e\xbd\x79\x54\xa3\xeb\xb3\x6f\x41\xc8\x13\x8d\xd9\xf8\xf3\xee\xeb\x97\x0a\x89\xf4\x15\x3d\x05\x0b\x8c\xb6\xfe\x5b\x6d\x9a\xcb\xce\xcd\x75\x87\x26\xad\x83\x27\xae\x74\x9d\x26\x49\xdf\xa8\x55\x66\xe5\x86\x8b\xd6\x0a\x11\x89\xae\x1c\xd7\xa9\x0b\xea\x3f\xa9\x1d\x8e\x76\xc7\xc0\x53\xac\xee\xb6\xdb\x9b\xda\x7a\xe4\x7e\x7b\xaf\xa5\x58\xa4\xf8\x13\x00\x00\xff\xff\x07\x20\xaa\xd4\x86\x02\x00\x00")

func generatorsTemplatesController_fiber_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_patchTemplate,
		"generators/templates/controller_fiber_patch.template",
	)
}

func generatorsTemplatesController_fiber_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_patch.template", size: 646, mode: os.FileMode(438), modTime: time.Unix(1698721053, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesFactoryTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x6a\xc3\x30\x10\x44\xcf\x16\xe8\x1f\xb6\x39\x14\x3b\x14\xfb\x1e\xe8\xa1\xa9\x4b\x6e\xf9\x05\xb3\x95\xd7\xae\xeb\xd8\x12\x6b\x05\xd3\x0a\xfd\x7b\x91\xad\xb4\x29\x84\xd2\x9b\x58\xcd\xbc\x9d\x1d\x83\xaa\xc7\x96\xa0\x41\x65\x35\x77\x34\x49\x21\x45\x37\x18\xcd\x16\x52\x29\x92\x8d\x73\x86\xf5\x3b\x29\x5b\x8d\x38\x90\xf7\x45\xc3\x38\xd0\xac\xb9\x9f\x8a\x1a\x2d\xbe\xe2\x44\x1b\x29\x92\x16\xfe\x25\x2d\x5a\xb4\x34\xe3\xc7\x54\x38\xb7\xaa\xaa\x38\x09\x10\xf5\x37\xe4\xcd\x5a\x53\x28\x3d\x5a\xd6\xa7\x13\xf1\x15\xe3\x67\xb8\x09\x07\xdc\x88\x7d\x9e\x48\xe1\x44\xd7\x9e\x35\x79\x16\x0c\xcd\x79\x54\x70\xa4\x79\xfd\xac\x14\x9a\xce\xe2\xa9\xfb\xa4\xda\xfb\xb4\x86\x4b\xfa\xbc\x8c\x8f\x0c\xb6\x2a\xbf\x25\x7e\xfe\x0e\x02\x4e\x8a\xa4\xdc\x3f\x80\xee\x61\xf7\x08\x75\x9e\x6e\x5b\xcd\x43\x85\x35\x1a\x4b\x9c\x1f\x34\x0f\x4f\xeb\x3b\x93\x22\xe9\x1a\xb8\xd3\xfd\x62\x4a\x0c\x8e\x9d\x4a\x5f\x98\x2f\xeb\xae\x74\x7e\xb9\x2f\x76\x16\xc0\xf7\xed\x82\xba\x15\xe6\xb0\xaa\xa2\xdb\x95\xfb\x1d\x94\x7b\x2f\x45\x12\xcb\x08\xf6\x5f\x75\xe4\x47\x9a\xd3\xc8\x0e\xcb\x98\xec\x99\x47\x50\xcb\x3c\x9a\x32\x29\xbc\x14\x5f\x01\x00\x00\xff\xff\xfa\xe9\x05\xf2\x38\x02\x00\x00")

func generatorsTemplatesFactoryTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesFactoryTemplate,
		"generators/templates/factory.template",
	)
}

func generatorsTemplatesFactoryTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesFactoryTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/factory.template", size: 568, mode: os.FileMode(438), modTime: time.Unix(1698721624, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_adapterTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\xcd\x41\x0a\xc2\x30\x10\x85\xe1\xb5\x81\xdc\x21\x74\xe9\xc2\x9e\x41\x11\x7a\x8c\xf0\x4c\xc7\x52\x6b\xcc\x30\x19\x29\x35\xe4\xee\x52\xe2\xc2\xfd\xff\xbe\xc7\x08\x0b\x26\x72\xa5\xbc\x10\xa9\x56\x3f\x41\x69\xc5\x66\x8d\x35\x73\xe4\x24\xea\xba\x52\x58\xd2\x83\x82\xfa\xd6\xf4\x77\x41\xa4\x35\xc9\x92\xfb\x11\x8a\x1b\x32\xf5\x53\x92\xe8\x31\x82\x95\xa4\xdb\xd7\xba\x31\xb9\x21\x49\x6c\xb4\x0f\xe0\x59\xf1\x9c\x3f\x34\xd6\x3a\xb4\x97\x73\xeb\x5d\x56\x79\x07\x75\xc5\x9a\xc3\xf5\xe2\x8e\xff\xd6\x69\x27\x7e\x9d\x35\xd5\x9a\x6f\x00\x00\x00\xff\xff\x14\x39\x09\xed\xb2\x00\x00\x00")

func generatorsTemplatesGateway_gorm_adapterTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_adapterTemplate,
		"generators/templates/gateway_gorm_adapter.template",
	)
}

func generatorsTemplatesGateway_gorm_adapterTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_adapterTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_adapter.template", size: 178, mode: os.FileMode(438), modTime: time.Unix(1698721653, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x6e\xeb\x20\x10\x85\xd7\x46\xe2\x1d\x90\x17\x57\xf6\x55\x84\xf7\x91\xba\x68\x93\x2a\xca\xa6\x9b\x3e\x80\x35\x31\x13\x4a\x63\x7e\x34\x06\x45\x2d\xe2\xdd\x2b\x62\x77\x57\x56\xc0\x1c\x9d\xef\x9b\x00\xd3\x0d\x34\x8a\x9c\x1d\x58\x2c\x65\xd4\x10\xf1\x0e\x5f\x9c\x71\x66\x6c\xf0\x14\x45\xc7\x59\xd3\xe6\x1c\xc8\x7f\xe2\x14\xc7\x35\x37\x5c\x09\x2c\xde\x3d\xdd\x96\x41\x41\x84\x0b\x2c\x38\x68\x4f\x76\xb0\x5e\xe1\xbc\xb4\xb5\xa0\x69\xb5\x89\x1f\xe9\x22\x27\x6f\x07\xed\xbd\x9e\x71\x48\xc9\xa8\x96\xb3\xbe\xce\xaf\xc9\x4d\xa2\xd3\xe2\xff\xc9\x93\x5d\x0d\xc6\x09\x82\x89\x30\x9b\x6f\x54\xa5\x9c\x56\x99\x67\x05\x21\x22\xf5\xe2\x40\x08\x11\x3b\xe3\x42\x8a\xdb\xe3\x5c\xef\xbd\xe8\x96\x48\xc6\xe9\x9d\x40\x22\x4f\xbd\xc8\x9c\x35\x46\x89\xfd\x93\xa8\x40\xf9\x86\xf7\xf7\x47\xa0\x7b\x80\x1b\xc2\x25\xcd\xb1\x8e\xb5\x3c\xbe\xc8\x83\x77\x4e\x6e\xe5\xff\xd6\x05\xe4\x5f\x3e\xb5\xb5\x39\x1f\xf7\x62\x3b\x46\xed\xea\x4f\xce\x50\x0d\xc7\x87\x57\x29\x9c\x35\xe5\x17\x13\x13\xb9\x1a\x13\x2b\x51\xbe\x56\x3d\xce\x0a\x67\x3f\x01\x00\x00\xff\xff\xf8\x39\xc5\x18\x7a\x01\x00\x00")

func generatorsTemplatesGateway_gorm_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_createTemplate,
		"generators/templates/gateway_gorm_create.template",
	)
}

func generatorsTemplatesGateway_gorm_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_create.template", size: 378, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xc1\x4a\xc4\x30\x10\xc6\xf1\x73\x03\x79\x87\xa1\x07\x69\xa5\xa4\x9e\x85\x55\x56\x57\xf6\xee\xc5\xe3\x32\xdb\x4c\x63\xdc\x26\x29\x93\x2c\x45\x43\xde\x5d\x6a\xf5\xe6\x79\x86\xef\xff\x9b\x71\xb8\xa0\x21\xc8\xd9\xa3\xa3\x52\x4e\x06\x13\x2d\xf8\x29\x85\x14\xd6\xcd\x81\x13\x34\x52\x54\x75\xce\x33\x87\x0f\x1a\xd2\x69\xfb\xeb\x47\x46\x47\x4b\xe0\x4b\xec\x35\x26\x3c\x63\xa4\xde\x04\x76\xbd\x0b\x9a\xa6\x58\x4b\xd1\xae\x1b\xe3\xd5\x0f\xd0\x18\xb8\x3d\x06\x76\x5b\xe4\x34\xe0\x6c\x13\x4e\xf6\x8b\x74\x29\xc7\xad\xb7\xd7\x38\x27\xe2\x16\x0e\x34\x51\xa2\xc6\x6a\x88\x89\xad\x37\x2d\x34\xe7\x10\xa6\x0e\x88\x39\x70\x0b\x59\x8a\x8a\x29\x5e\xa7\x04\xf7\x3b\x30\xea\xf0\xa4\x9e\x83\xf7\xea\xed\x9d\x98\x56\x6a\x55\x5b\x0d\x3b\x78\xac\x3b\xb0\xba\x93\xa2\x6a\xd5\xef\xe6\xcd\x46\x53\xff\x31\x72\xf9\xe1\x56\x4c\xe9\xca\x1e\xb6\x82\x7a\x0d\x4b\xdc\x8f\x23\x0d\x89\x34\x3c\xc0\x5d\xf7\x77\x78\x59\x31\x52\x14\x29\xbe\x03\x00\x00\xff\xff\xfd\xae\xd8\x1b\x41\x01\x00\x00")

func generatorsTemplatesGateway_gorm_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_deleteTemplate,
		"generators/templates/gateway_gorm_delete.template",
	)
}

func generatorsTemplatesGateway_gorm_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_delete.template", size: 321, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6b\xe3\x30\x10\x85\xcf\x16\xe8\x3f\xcc\xfa\x10\xec\x25\xd8\xbb\xd7\x82\x29\x49\xd3\x86\x42\xa1\xd0\x3f\x60\x54\x6b\x6c\xd4\x58\x92\x19\xcb\x84\x54\xe8\xbf\x17\xcb\x26\x90\xb6\x47\x8d\xde\xf7\xde\x9b\x19\x44\x73\x12\x1d\x82\xf7\x46\x68\x0c\xa1\xee\x84\xc3\xb3\xb8\x70\xc6\x99\xd2\x83\x25\x07\x19\x67\x49\xea\xfd\x40\xf6\x03\x1b\x57\x2f\xba\xb2\x25\xa1\xf1\x6c\xe9\x34\x96\x52\x38\xf1\x2e\x46\x2c\x3b\x4b\xba\xd4\x56\x62\x3f\xa6\x9c\xe5\xb3\x47\x3b\x99\x06\xb2\x0e\x8e\x96\xf4\x92\x51\x37\x62\x50\x4e\xf4\xea\x13\x65\x08\xc7\x25\x6e\x27\xc5\xe0\x90\x72\x38\xa2\xdb\x5f\x9e\x0f\x99\x92\x30\x3a\x52\xa6\xcb\x21\xfb\xbb\x0e\x5f\x27\x37\x4c\x6e\x0b\x48\x64\x29\x07\xcf\x59\x62\xe3\x08\xee\x2a\xd8\x2c\xb9\xc5\x6f\x21\x3e\x70\x96\x10\x8e\x53\x1f\xa5\x5d\x71\xd8\x17\x0f\xd6\x98\xe2\x45\x69\xe5\xb2\xff\x79\xf1\xa4\x8c\xcc\xec\xea\x9f\x2a\x09\x15\xdc\xa7\x5b\x50\x32\x2e\x91\xa8\x16\x16\xbc\x78\x9c\xb3\xe1\x4f\x05\x46\xf5\xb1\x41\x42\xe8\x26\x32\xf3\x7b\x7b\x23\xe2\x2c\x09\xdf\xe0\x37\x7b\x1e\x77\x6d\x8b\x8d\x43\x09\x55\x05\xff\x7e\x3a\x18\xd5\x5f\x41\x11\x8f\x22\xe7\xca\x37\x17\x88\x90\xf7\xf1\xbb\x5e\x4a\x87\x70\xa5\x56\xb7\xcd\x4a\xaf\x96\xe1\x2b\x00\x00\xff\xff\xd6\x6c\x11\x1f\xe9\x01\x00\x00")

func generatorsTemplatesGateway_gorm_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_get_by_idTemplate,
		"generators/templates/gateway_gorm_get_by_id.template",
	)
}

func generatorsTemplatesGateway_gorm_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_get_by_id.template", size: 489, mode: os.FileMode(438), modTime: time.Unix(1693068324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbb\x6a\xec\x30\x10\x40\x6b\x0b\xf4\x0f\x62\x8b\xc5\x86\x8b\xdc\x5f\x48\x91\x17\x4b\x20\x21\x45\xca\x10\x96\x89\x3d\x36\xce\x5a\x8f\x8c\x46\x2c\x1b\xa1\x7f\x0f\x96\x52\xa4\x48\xa7\x41\x33\xe7\x1c\x0f\xc3\x09\x66\x54\x29\x59\x30\x98\xf3\x71\x06\xc6\x33\x5c\xa4\x90\x62\x31\xde\x11\xab\x56\x8a\x66\x97\x92\x27\xf7\x81\x03\x1f\xeb\x5e\x3f\x11\x18\x3c\x3b\x3a\x85\x7e\x04\x86\x77\x08\xd8\xcf\x8e\x4c\x6f\xdc\x88\x6b\xd8\x49\xd1\x6d\x8c\x29\xda\x41\xb5\xb3\x3a\x38\x32\xd5\x71\x1c\xc0\x2f\x0c\xeb\xf2\x85\x63\xce\x87\xaa\xbb\x1e\xc1\x33\x52\xa7\x1e\x97\xc0\xed\xb4\xac\x8c\x54\xde\x0f\xd6\x47\xee\x54\xfb\xfa\xb6\x4d\xcf\x91\x7d\xe4\x7f\x0a\x89\x1c\x75\x2a\x49\xd1\x7c\x46\xa4\x8b\xfa\x7f\xa5\x66\x7d\x77\xa3\x6f\x9d\xb5\xfa\x69\x2b\x68\xf7\x35\x44\xff\x65\x4d\xb9\xc4\x35\x29\x55\x55\xc8\xb9\xcc\xae\xf0\x37\xda\x6f\x5f\xca\x52\x34\x84\x21\xae\xe5\xab\x18\xf5\xcb\x00\xb6\xdd\xd7\x83\x0a\x23\xe4\x48\x56\xb9\x9f\xc6\x7a\xa0\xef\xb7\x54\x29\xb2\x14\xdf\x01\x00\x00\xff\xff\x0f\x2a\xeb\xd0\x6b\x01\x00\x00")

func generatorsTemplatesGateway_gorm_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_listTemplate,
		"generators/templates/gateway_gorm_list.template",
	)
}

func generatorsTemplatesGateway_gorm_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_list.template", size: 363, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\xd3\x30\x10\x85\xcf\xb1\xe4\xff\x30\xec\xa1\x72\x50\x94\xee\x01\x71\xa8\xd4\xc3\xd2\x85\x15\x87\x15\x2b\xf6\x88\x50\x35\x24\x93\xc8\x6c\x62\x07\xc7\xa1\xec\x5a\xfe\xef\xc8\x76\xd2\xaa\xd0\x03\xa2\xb7\x19\x3f\xfb\xbd\xef\xa5\x03\x56\x4f\xd8\x12\x38\xa7\xb0\x27\xef\xf7\x2d\x5a\x3a\xe0\x33\x67\x9c\xc9\x7e\xd0\xc6\x82\xe0\x2c\xab\xd1\xe2\x37\x1c\x09\xae\x9c\x1b\x8c\xfe\x4e\x95\xdd\xa7\x0b\xeb\xc6\x60\x4f\x07\x6d\x9e\xc6\xf5\xa2\x5a\xb7\xda\xf4\x57\x9c\x65\xff\xae\x5e\xf7\xba\xa6\x6e\xbc\xe2\x2c\x0f\xd6\xcd\xa4\x2a\x10\x2d\xdc\x69\xd3\xa7\x68\xfb\x0a\x07\x69\xb1\x93\x2f\x54\x7b\x7f\x97\x52\xde\xd4\x38\x58\x32\x39\x3c\x60\x2b\x15\x5a\x12\x8d\xec\x2c\x99\xe3\xfc\x21\x8e\x05\x0c\xf3\x0c\x8b\x69\xb9\x28\x3e\xaa\x61\xb2\x39\x88\xd7\xcb\xe2\xd3\x64\x87\xc9\x16\x40\xc6\x68\x93\x83\x9b\xe9\x61\xb3\x85\x2f\x5f\x17\xd1\x2d\x5a\x74\x3e\x24\xcd\x7e\x4c\x64\x9e\xc3\x69\x5b\xde\xbe\x2b\x77\x5a\xa9\xf2\x3e\xb0\x88\x55\x42\x2a\x2f\xe5\x77\x3e\x62\x66\xce\xa5\xc0\xa3\x4f\x8f\xfd\x44\x03\x95\x9e\x94\x05\xa9\xec\xdb\x37\x9c\x65\x86\xc6\xa9\xb3\xe1\xfd\x68\x54\xee\xc2\xa9\x58\x45\x51\xce\x59\x26\x1b\x48\x92\xf2\x7d\x08\x0c\xaf\xb6\xa0\x64\x17\x63\x67\x86\xec\x64\x54\x98\x8b\x33\x11\x67\x59\xb2\x3b\x5d\xfe\xac\x0f\xe3\x4d\xd3\x50\x65\xa9\x86\xed\x16\xae\xcf\x5e\x58\x9d\x97\x13\x8f\xb2\xd0\xc1\x06\xc2\x2f\xf4\x53\xc4\xdd\x3d\xfe\x7a\xc0\x96\xc6\x0d\x5c\xc7\x85\x2f\x82\xfb\xd1\xef\xaf\xf6\x45\x84\x3a\x7d\x9f\xd4\xca\xcc\xbc\x20\x3f\x56\xa8\xc4\x2a\xdc\xcd\xff\x48\xfd\x1f\xc8\x3a\x12\x84\x3e\x2f\x41\x5d\x60\x3a\x21\x1d\xd3\xef\xb0\xab\x96\xb5\x88\x5f\xe2\x44\x10\xd0\xe8\x51\xbe\x50\x5e\x1c\x3d\xe7\x50\x7a\xfe\x67\xc5\x46\x3c\x67\xbf\x03\x00\x00\xff\xff\x24\x7c\x5d\x03\x7c\x03\x00\x00")

func generatorsTemplatesGateway_gorm_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_paginateTemplate,
		"generators/templates/gateway_gorm_paginate.template",
	)
}

func generatorsTemplatesGateway_gorm_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_paginate.template", size: 892, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\x4f\x6b\xa4\x40\x10\xc5\xcf\x36\xf4\x77\xa8\xf5\xb0\x28\x88\xee\x79\xc1\x84\x49\x26\x19\x72\x08\x84\x40\x92\xe3\x50\xa3\xa5\x63\xa6\xb5\x4d\x75\x8b\x4c\x9a\xfe\xee\x41\x3b\x7f\x2e\x39\x59\xf6\x7b\xf5\xde\xaf\x46\xac\x4e\xd8\x12\x38\x37\x60\x4f\xde\xef\x5b\xb4\x34\xe3\x59\x0a\x29\xba\x7e\xd4\x6c\x21\x91\x22\x8a\x9d\x1b\x59\xbf\x52\x65\xf7\xc1\x57\x34\x8c\x3d\xcd\x9a\x4f\xa6\xa8\xd1\xe2\x01\x0d\x15\xad\xe6\xbe\xe8\x75\x4d\xca\xc4\x52\xa4\x4b\x46\x33\x0d\x15\x24\x2d\xec\x34\xf7\xa1\x63\x5f\xe1\xd8\x59\x54\xdd\x3b\xd5\xde\xef\x42\xdd\xa6\xc6\xd1\x12\xa7\xf0\x80\xb6\x3a\x26\x4d\xa7\x2c\x71\xf8\xb9\x5d\xe7\x0c\x06\x9a\x9f\x51\x4d\x64\xc2\x73\x98\x53\x48\x0e\x5a\xab\x0c\x88\x59\x73\x0a\x4e\x8a\xe8\x6d\x22\x3e\xc3\xff\x12\xda\x7c\x7b\x95\x5f\xeb\x61\xc8\xef\x17\xa6\xe4\x6f\x40\xcb\x7f\xe3\x70\x7e\xc5\x8d\xba\x06\x42\x79\x7e\xb7\x85\x3f\x25\x0c\x9d\x5a\x43\x3f\x53\x4b\x58\xbf\xf9\xcb\x91\x98\x92\xb8\xab\xa1\x84\xcb\x38\xfb\xd9\x49\xa5\x88\x3c\x90\x32\x14\xd6\x9c\x0b\x92\xf1\x7e\x51\xd6\x0e\x26\x33\x29\xbb\x10\x86\xb0\xa7\xb1\x46\x4b\x26\xf9\xbe\x30\x5d\x4d\x76\xe2\x01\x82\x37\x7f\xd4\xb3\xd9\x34\x0d\x55\x96\x6a\xb8\x80\x7f\xd9\x97\x70\xb3\xdc\x2d\x85\x97\xe2\x23\x00\x00\xff\xff\x05\xb2\x3a\x03\xca\x01\x00\x00")

func generatorsTemplatesGateway_gorm_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_patchTemplate,
		"generators/templates/gateway_gorm_patch.template",
	)
}

func generatorsTemplatesGateway_gorm_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_patch.template", size: 458, mode: os.FileMode(438), modTime: time.Unix(1697857495, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_interfaceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x4d\x0a\x83\x30\x10\x46\xd7\x06\x72\x87\xe0\x4a\x57\x1e\xa3\xc7\x90\x69\x1c\x6d\x6a\xf3\xc3\x38\x22\x76\x98\xbb\x97\x56\x14\xba\x7d\xbc\xef\x7d\x05\xfc\x0c\x13\x3a\x91\x04\x11\x55\xfb\x09\x18\x37\xd8\xad\xb1\x26\xc4\x92\x89\x5d\x63\x4d\x35\x00\xc3\x1d\x16\x74\xb5\x48\xa1\xfc\x44\xcf\xfd\x31\xe8\x46\x82\x88\x5b\xa6\x79\xe9\x4e\xab\x9b\x32\xc5\xda\x9a\xf6\x5b\xe1\xbd\x9c\xf9\xde\x43\x09\x0c\xaf\xf0\xc6\x41\xf5\x76\x3c\xb9\x90\x18\x69\x04\x8f\x4e\xac\xa9\x44\x22\xf2\x23\x0f\xff\x6e\x73\xe1\x90\xca\xca\xaa\xad\xbb\x48\x5e\xf9\x87\xac\xd1\x4f\x00\x00\x00\xff\xff\x2e\x0e\x46\xcd\xce\x00\x00\x00")

func generatorsTemplatesGateway_interfaceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_interfaceTemplate,
		"generators/templates/gateway_interface.template",
	)
}

func generatorsTemplatesGateway_interfaceTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_interfaceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_interface.template", size: 206, mode: os.FileMode(438), modTime: time.Unix(1693116511, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGorm_modelTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x3b\xae\xc3\x20\x10\x85\xe1\xda\x48\xec\x61\x44\x65\x6f\xc1\xf5\x6d\x6e\x93\x2a\xbd\x3d\x81\xb1\x85\x02\x18\xf1\x28\x12\x34\x7b\x8f\xb0\x9c\x2e\xa7\x3f\xff\x17\x51\x3f\x71\x27\xf0\x87\x21\x97\xa5\x90\xa2\xbc\x22\x41\x6b\x01\x3d\x2d\x1a\xa3\x2d\xe8\xec\x9b\x0c\x33\xe4\x92\xaa\x2e\xd0\xa4\x18\xfe\xff\xe0\x5a\x2e\xc9\x86\x1d\xd6\xfd\x48\x7e\x56\xfd\x3c\xd7\x6a\x8d\x5a\xa5\x18\x5a\xdb\x2c\x39\x93\x97\xb3\xce\x2c\x05\x77\x61\xab\x41\xc3\xe8\x7f\x22\x13\xdc\xf1\xe1\xe8\x86\x9e\xc6\xe9\x1b\xef\x62\xa2\x52\x53\x00\x75\x9d\xa2\xab\x09\x1d\xb3\x3a\x9b\x9f\x00\x00\x00\xff\xff\x19\x45\x08\xbb\xc6\x00\x00\x00")

func generatorsTemplatesGorm_modelTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGorm_modelTemplate,
		"generators/templates/gorm_model.template",
	)
}

func generatorsTemplatesGorm_modelTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGorm_modelTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gorm_model.template", size: 198, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesHttp_interfaceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x09\xc3\x30\x0c\x05\xd0\x73\x05\xda\x41\xc7\x76\x93\x1e\x0b\xf6\x02\xc2\xa8\xae\x29\xd8\xe2\xe7\x13\x08\x21\xbb\xe7\xa5\xb7\xbf\xf7\xb0\x1f\x99\x2a\x2a\x3c\x32\xec\x5d\xeb\xa7\x04\xf6\x80\x8d\xc9\xc0\xd7\x5b\xd8\xa9\xf2\x28\x74\xf0\x99\x0b\xb4\x8d\x18\xb3\xbf\x2c\x80\x05\x95\x4b\xe5\x0e\x00\x00\xff\xff\xe4\x5c\x26\xc2\x4b\x00\x00\x00")

func generatorsTemplatesHttp_interfaceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesHttp_interfaceTemplate,
		"generators/templates/http_interface.template",
	)
}

func generatorsTemplatesHttp_interfaceTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesHttp_interfaceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/http_interface.template", size: 75, mode: os.FileMode(438), modTime: time.Unix(1693179071, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesParse_body_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8e\xc1\x4a\xc4\x40\x0c\x86\xcf\x0d\xe4\x1d\xe2\x9e\x5a\x91\x2e\x78\x54\xf6\xb2\xbe\x80\xe8\x13\x64\xa7\x69\x1d\xdc\x9d\xa9\x69\x46\x94\xd2\x77\x97\x4c\xf1\x12\xf8\x93\xef\xfb\xc9\xcc\xe1\x93\x27\xa1\x99\x75\x11\x45\x40\x88\xb7\x39\xab\x51\x8b\xd0\x1c\xa6\x68\x1f\xe5\xd2\x87\x7c\x3b\x4e\x79\x8c\x17\xd1\xe3\x3e\xbf\x1f\x0f\x08\x9d\xe3\x63\x49\x81\x5e\xdd\x3e\xe7\xe1\xb7\x0d\x74\x5f\x89\xfe\xc5\x7e\x1e\x68\x60\x63\x8a\xc9\x44\x47\x0e\xb2\x6e\x1d\x89\x6a\x56\x5a\x11\x9a\x38\x7a\xa0\xa7\x13\x85\xde\xd5\xda\xa1\xad\x2b\xdd\x73\x3d\xdd\x9d\x28\xc5\x6b\x85\x9b\xd0\xbf\x1b\x5b\x59\xda\xbd\x7d\x0f\x67\x1e\xde\xe4\xab\xc8\x62\x9d\x33\x2a\x56\x34\xb9\x8a\xd0\x6c\xfe\xdc\xff\x2a\xc5\x2b\xc2\x86\xf0\x17\x00\x00\xff\xff\x00\x32\x92\xdc\xee\x00\x00\x00")

func generatorsTemplatesParse_body_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesParse_body_fiberTemplate,
		"generators/templates/parse_body_fiber.template",
	)
}

func generatorsTemplatesParse_body_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesParse_body_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/parse_body_fiber.template", size: 238, mode: os.FileMode(438), modTime: time.Unix(1697855279, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesRoutes_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xbf\x6a\xc3\x30\x10\xc6\xe7\x08\xf4\x0e\x42\x93\x1d\x82\x04\x1d\x0b\x1d\x4a\x87\x3e\x86\x51\x94\xb3\xad\xc6\xd6\x1d\xf2\xb9\x85\x1e\x7a\xf7\xe2\x98\xa6\x14\xb2\x68\xd0\xf7\xbb\xef\x0f\x85\x78\x0d\x03\x98\x82\x2b\xc3\xa2\x95\x56\x69\x26\x2c\x6c\x1a\xad\x0e\x56\x84\x0a\x7e\x40\xe4\x2e\x87\x19\x6a\xf5\x7d\x09\x33\x7c\x61\xb9\x2e\x7e\x64\x26\x1f\x31\x73\xc1\x69\x82\xb2\x78\x91\x1d\xea\xfe\x3e\xed\x66\x78\xb0\x43\xe2\x71\x3d\xbb\x88\xb3\x1f\xb0\x4f\x67\x28\x7e\x7f\x3f\x9f\xac\x56\xed\x06\xf5\x6b\x8e\x66\x77\xe8\x62\xa0\xc4\x61\x4a\xdf\x70\xa9\xb5\x09\x44\xe6\x78\xc3\xdd\x2b\xd1\xc9\x44\x73\x7c\x90\xe4\x1e\xdd\xbe\xdd\xe5\xd6\x88\x56\x87\xdb\x48\xf3\xfc\x62\x02\x91\x7b\x2f\xb8\x52\x63\xef\xb5\x6d\xfb\x4b\x38\x91\x6d\x5c\x37\x03\x8f\xb8\x55\x10\x81\x7c\x21\x4c\x99\x6b\x3d\x99\xe8\x44\x76\xe9\x7f\x5a\xab\x55\xd5\xea\x27\x00\x00\xff\xff\xf3\x0d\x5d\xfa\x51\x01\x00\x00")

func generatorsTemplatesRoutes_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesRoutes_fiberTemplate,
		"generators/templates/routes_fiber.template",
	)
}

func generatorsTemplatesRoutes_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesRoutes_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/routes_fiber.template", size: 337, mode: os.FileMode(438), modTime: time.Unix(1698721086, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesUsecaseTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x41\xce\x82\x30\x10\x46\xd7\x7f\x93\xde\xa1\x61\xf5\xbb\xb1\x87\x70\xe1\xce\x2b\x90\xcf\x32\x34\x88\x40\x33\x1d\x42\xb0\xe9\xdd\x0d\x82\xae\x24\x71\x3b\xf3\xbe\xf7\x02\x5c\x0b\x4f\x26\xa5\x1e\x1d\xe5\x5c\x3a\x44\xd2\x4a\xab\xa6\x0b\x03\x8b\xf1\xa6\x48\x29\xf0\x70\x23\x27\xe5\x8a\xd8\x9a\xd1\xd1\x34\x70\x1b\x6d\x05\xc1\x15\x91\xac\x87\xd0\x84\x39\xda\x8f\x68\xbb\x14\x8b\x4c\xe6\xf0\x4e\x94\x0e\xa1\x11\xdc\x9b\x07\x55\x39\x9f\x10\xc9\x44\xe1\xd1\x89\x49\x5a\xfd\x6d\x23\xe3\x8f\xdf\xe8\xf3\xfa\xd5\x2a\x2f\xd2\x7a\xec\x9d\xb9\xd0\xf4\xff\xd3\xe8\xb0\xdf\x5f\xc2\x4c\x32\x72\xbf\xcb\xa4\xad\x91\x5f\xed\x67\x00\x00\x00\xff\xff\xdd\xe3\x11\xf3\x35\x01\x00\x00")

func generatorsTemplatesUsecaseTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesUsecaseTemplate,
		"generators/templates/usecase.template",
	)
}

func generatorsTemplatesUsecaseTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesUsecaseTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/usecase.template", size: 309, mode: os.FileMode(438), modTime: time.Unix(1698721571, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"generators/templates/adapter_fiber.template":              generatorsTemplatesAdapter_fiberTemplate,
	"generators/templates/case_create.template":                generatorsTemplatesCase_createTemplate,
	"generators/templates/case_delete.template":                generatorsTemplatesCase_deleteTemplate,
	"generators/templates/case_get_by_id.template":             generatorsTemplatesCase_get_by_idTemplate,
	"generators/templates/case_list.template":                  generatorsTemplatesCase_listTemplate,
	"generators/templates/case_paginate.template":              generatorsTemplatesCase_paginateTemplate,
	"generators/templates/case_patch.template":                 generatorsTemplatesCase_patchTemplate,
	"generators/templates/controller_fiber.template":           generatorsTemplatesController_fiberTemplate,
	"generators/templates/controller_fiber_create.template":    generatorsTemplatesController_fiber_createTemplate,
	"generators/templates/controller_fiber_delete.template":    generatorsTemplatesController_fiber_deleteTemplate,
	"generators/templates/controller_fiber_get_by_id.template": generatorsTemplatesController_fiber_get_by_idTemplate,
	"generators/templates/controller_fiber_list.template":      generatorsTemplatesController_fiber_listTemplate,
	"generators/templates/controller_fiber_paginate.template":  generatorsTemplatesController_fiber_paginateTemplate,
	"generators/templates/controller_fiber_patch.template":     generatorsTemplatesController_fiber_patchTemplate,
	"generators/templates/factory.template":                    generatorsTemplatesFactoryTemplate,
	"generators/templates/gateway_gorm_adapter.template":       generatorsTemplatesGateway_gorm_adapterTemplate,
	"generators/templates/gateway_gorm_create.template":        generatorsTemplatesGateway_gorm_createTemplate,
	"generators/templates/gateway_gorm_delete.template":        generatorsTemplatesGateway_gorm_deleteTemplate,
	"generators/templates/gateway_gorm_get_by_id.template":     generatorsTemplatesGateway_gorm_get_by_idTemplate,
	"generators/templates/gateway_gorm_list.template":          generatorsTemplatesGateway_gorm_listTemplate,
	"generators/templates/gateway_gorm_paginate.template":      generatorsTemplatesGateway_gorm_paginateTemplate,
	"generators/templates/gateway_gorm_patch.template":         generatorsTemplatesGateway_gorm_patchTemplate,
	"generators/templates/gateway_interface.template":          generatorsTemplatesGateway_interfaceTemplate,
	"generators/templates/gorm_model.template":                 generatorsTemplatesGorm_modelTemplate,
	"generators/templates/http_interface.template":             generatorsTemplatesHttp_interfaceTemplate,
	"generators/templates/parse_body_fiber.template":           generatorsTemplatesParse_body_fiberTemplate,
	"generators/templates/routes_fiber.template":               generatorsTemplatesRoutes_fiberTemplate,
	"generators/templates/usecase.template":                    generatorsTemplatesUsecaseTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"generators": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"adapter_fiber.template":              &bintree{generatorsTemplatesAdapter_fiberTemplate, map[string]*bintree{}},
			"case_create.template":                &bintree{generatorsTemplatesCase_createTemplate, map[string]*bintree{}},
			"case_delete.template":                &bintree{generatorsTemplatesCase_deleteTemplate, map[string]*bintree{}},
			"case_get_by_id.template":             &bintree{generatorsTemplatesCase_get_by_idTemplate, map[string]*bintree{}},
			"case_list.template":                  &bintree{generatorsTemplatesCase_listTemplate, map[string]*bintree{}},
			"case_paginate.template":              &bintree{generatorsTemplatesCase_paginateTemplate, map[string]*bintree{}},
			"case_patch.template":                 &bintree{generatorsTemplatesCase_patchTemplate, map[string]*bintree{}},
			"controller_fiber.template":           &bintree{generatorsTemplatesController_fiberTemplate, map[string]*bintree{}},
			"controller_fiber_create.template":    &bintree{generatorsTemplatesController_fiber_createTemplate, map[string]*bintree{}},
			"controller_fiber_delete.template":    &bintree{generatorsTemplatesController_fiber_deleteTemplate, map[string]*bintree{}},
			"controller_fiber_get_by_id.template": &bintree{generatorsTemplatesController_fiber_get_by_idTemplate, map[string]*bintree{}},
			"controller_fiber_list.template":      &bintree{generatorsTemplatesController_fiber_listTemplate, map[string]*bintree{}},
			"controller_fiber_paginate.template":  &bintree{generatorsTemplatesController_fiber_paginateTemplate, map[string]*bintree{}},
			"controller_fiber_patch.template":     &bintree{generatorsTemplatesController_fiber_patchTemplate, map[string]*bintree{}},
			"factory.template":                    &bintree{generatorsTemplatesFactoryTemplate, map[string]*bintree{}},
			"gateway_gorm_adapter.template":       &bintree{generatorsTemplatesGateway_gorm_adapterTemplate, map[string]*bintree{}},
			"gateway_gorm_create.template":        &bintree{generatorsTemplatesGateway_gorm_createTemplate, map[string]*bintree{}},
			"gateway_gorm_delete.template":        &bintree{generatorsTemplatesGateway_gorm_deleteTemplate, map[string]*bintree{}},
			"gateway_gorm_get_by_id.template":     &bintree{generatorsTemplatesGateway_gorm_get_by_idTemplate, map[string]*bintree{}},
			"gateway_gorm_list.template":          &bintree{generatorsTemplatesGateway_gorm_listTemplate, map[string]*bintree{}},
			"gateway_gorm_paginate.template":      &bintree{generatorsTemplatesGateway_gorm_paginateTemplate, map[string]*bintree{}},
			"gateway_gorm_patch.template":         &bintree{generatorsTemplatesGateway_gorm_patchTemplate, map[string]*bintree{}},
			"gateway_interface.template":          &bintree{generatorsTemplatesGateway_interfaceTemplate, map[string]*bintree{}},
			"gorm_model.template":                 &bintree{generatorsTemplatesGorm_modelTemplate, map[string]*bintree{}},
			"http_interface.template":             &bintree{generatorsTemplatesHttp_interfaceTemplate, map[string]*bintree{}},
			"parse_body_fiber.template":           &bintree{generatorsTemplatesParse_body_fiberTemplate, map[string]*bintree{}},
			"routes_fiber.template":               &bintree{generatorsTemplatesRoutes_fiberTemplate, map[string]*bintree{}},
			"usecase.template":                    &bintree{generatorsTemplatesUsecaseTemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
