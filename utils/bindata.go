// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// generators/templates/adapter_fiber.template
// generators/templates/case_create.template
// generators/templates/case_delete.template
// generators/templates/case_get_by_id.template
// generators/templates/case_list.template
// generators/templates/case_paginate.template
// generators/templates/case_patch.template
// generators/templates/controller_fiber.template
// generators/templates/controller_fiber_create.template
// generators/templates/controller_fiber_delete.template
// generators/templates/controller_fiber_get_by_id.template
// generators/templates/controller_fiber_list.template
// generators/templates/controller_fiber_paginate.template
// generators/templates/controller_fiber_patch.template
// generators/templates/gateway_gorm_adapter.template
// generators/templates/gateway_gorm_create.template
// generators/templates/gateway_gorm_delete.template
// generators/templates/gateway_gorm_get_by_id.template
// generators/templates/gateway_gorm_list.template
// generators/templates/gateway_gorm_paginate.template
// generators/templates/gateway_gorm_patch.template
// generators/templates/gateway_interface.template
// generators/templates/gorm_model.template
// generators/templates/http_interface.template
// generators/templates/http_singleton.template
// generators/templates/parse_body_fiber.template
// generators/templates/routes_fiber.template
// generators/templates/usecase.template
package utils

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _generatorsTemplatesAdapter_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\x41\x8b\xdb\x30\x10\x85\xcf\x16\xe8\x3f\x0c\x3a\x14\xbb\x2d\x36\xf4\x18\xe8\x21\x14\x4a\x0b\xa5\x2c\x24\x7b\x0e\x8a\x3d\x76\xb4\x89\x2d\xed\x68\x14\xb3\x18\xff\xf7\x45\x72\xd6\xe4\xb6\xbb\x17\x63\xfc\xde\x37\x7e\x6f\xc6\xe9\xfa\xac\x3b\x84\x13\xb3\x93\x42\x0a\xd3\x3b\x4b\x0c\xb9\x14\x59\x6b\x8e\x48\x87\x96\x74\x8f\xa3\xa5\x33\xa8\x69\x72\x64\x9f\xb0\xe6\xc3\xa0\x7b\x9c\xe7\x6a\xd5\x7c\x15\xf9\x2a\x11\x4a\x8a\xec\x83\xd6\x8a\x6c\x60\xf4\x2a\xfe\x38\x53\x9d\xe1\x53\x38\x96\xb5\xed\xab\xce\x2e\xfa\xf2\xbc\xfe\x50\xef\xe8\x55\x6f\x9a\xe6\x82\xa3\x26\xac\x6a\x4b\xfe\x33\x7e\xc2\xe7\x80\x9e\x4d\xa3\xa4\x28\x62\x12\x7e\x71\x08\xc9\xb9\x6d\xb4\x63\x24\xf0\x4c\xa1\x66\x98\xa4\xc8\xb4\x73\xf0\x35\x89\xe5\xd6\x39\x29\xe6\x48\xb4\x61\xa8\x21\x6f\x6f\xc2\x8d\x2a\x60\xc7\x9a\x38\x4f\xfb\xf4\x4c\x66\xe8\x0a\x40\x22\x4b\x69\x10\x21\x07\x1a\xa0\x2d\xb5\x73\xe5\x3f\xe3\x19\x87\x5c\x6d\x14\x7c\x83\x08\x14\xf7\x93\x07\x1c\x7f\xc7\xc1\x79\x01\x7f\xf6\xfb\x87\x1d\xd2\x15\x69\x4d\xb3\xf9\xb9\x84\x2d\xff\xe3\x98\x2f\x6f\xbf\xec\xd0\x9a\x2e\x1a\xb2\xbf\x7d\x1f\x58\x1f\x2f\xb8\x01\xa6\x80\xdf\xa5\xc8\xe6\xd4\x32\xb2\xe5\xa3\xc7\x78\xe9\x2c\xee\x2c\xf1\x45\x34\x14\xeb\xf7\x75\x37\x77\x62\x82\xa7\x69\x39\xdd\x9c\x52\xbe\x95\xf9\x72\xdf\x7f\xd2\xce\xcd\xa9\xc6\x6b\x00\x00\x00\xff\xff\xc3\x2f\x84\x98\x64\x02\x00\x00")

func generatorsTemplatesAdapter_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesAdapter_fiberTemplate,
		"generators/templates/adapter_fiber.template",
	)
}

func generatorsTemplatesAdapter_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesAdapter_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/adapter_fiber.template", size: 612, mode: os.FileMode(438), modTime: time.Unix(1693179310, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x4c\x8f\x41\x6a\xc3\x30\x10\x45\xd7\x16\xe8\x0e\x83\x57\x76\x09\xf6\x21\xbc\xea\x29\xcc\x30\x9e\x08\xb5\x89\x2c\x46\x63\x9a\x54\xe8\xee\xc5\x8a\x28\x59\x09\xc4\xff\xef\xbf\x89\x48\xdf\xe8\x18\x72\x0e\x78\xe7\x52\x56\xc2\xc4\xd6\x58\xe3\xef\x71\x17\x85\xc1\x9a\xae\xa7\x3d\x28\x3f\xb4\xb7\xa6\x73\xd0\xe7\x1c\x65\xff\x62\xd2\xf5\x55\x99\x71\xc3\xa8\x2c\x69\x76\xa8\xfc\x83\xcf\x34\xff\xd3\xda\x4f\x6f\xcd\x78\x42\xf5\x19\x19\x16\x61\x54\xfe\x0c\xf1\x50\x48\x2a\x07\x29\x64\x6b\xba\x9c\xaf\x9e\x6f\x5b\x2a\xc5\x9a\x72\x86\xaf\x47\x20\x18\xa8\xa9\xad\x84\xd1\x2b\xde\xfc\x2f\x6f\xa5\x2c\x98\x78\x6c\xa4\x81\xf4\x01\x4d\x71\x5a\x5e\xef\x05\x7c\xe5\x7f\xbc\x8d\x8d\x30\x24\x15\x1f\xdc\x05\x58\x64\x97\xb1\xce\x0a\xeb\x21\x01\x68\x6a\xaa\x53\x83\xba\xe9\xad\x7a\x06\xbb\x9c\xeb\xa1\x6b\x25\x9f\x96\x5d\x19\xab\xea\x5f\x00\x00\x00\xff\xff\x94\x9d\xba\xd0\x44\x01\x00\x00")

func generatorsTemplatesCase_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_createTemplate,
		"generators/templates/case_create.template",
	)
}

func generatorsTemplatesCase_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_create.template", size: 324, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xcc\x41\x8a\x84\x40\x0c\x85\xe1\xb5\x81\xdc\x21\xb8\xaa\x02\xf1\x12\xce\x3d\x24\x13\x33\x52\x8c\x56\x49\x8c\xb4\xdd\x52\x77\x6f\x9a\x76\xf5\x16\x8f\xef\xdf\x58\xfe\x79\x56\xba\xae\xcc\xab\xd6\x3a\x0a\xef\x8a\x80\x90\xd6\xad\x98\x53\x40\x68\x5a\x29\xd9\xf5\xf4\x16\x21\x7e\xae\xbf\x23\x0b\x05\xb9\xcd\x28\xbc\x25\xe7\x25\xbd\x74\xaa\x75\xe0\x5d\x23\xfd\xe8\xa2\xae\x41\xfc\xa4\xdb\xf6\xc3\x77\x3b\x4a\x13\xed\x6e\x29\xcf\x91\xc2\x6f\x29\x4b\x47\x6a\x56\x2c\xd2\x85\xd0\x98\xfa\x61\x99\xa4\x9f\xd9\xf5\xc1\xcf\xfe\x2e\xa5\x29\x22\x54\x84\x77\x00\x00\x00\xff\xff\x87\x36\x31\x49\xaf\x00\x00\x00")

func generatorsTemplatesCase_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_deleteTemplate,
		"generators/templates/case_delete.template",
	)
}

func generatorsTemplatesCase_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_delete.template", size: 175, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8d\x51\x4a\x04\x31\x0c\x86\x9f\xa7\xd0\x3b\x84\x79\x6a\x65\x99\xb9\x83\x2b\x88\x4f\x1e\x61\x08\x99\x58\xaa\x6e\xa7\xa4\x29\xee\x5a\x7a\x77\x91\xad\x3e\x05\xc2\xf7\x7f\x5f\x46\xfa\xc0\xc0\xd0\x5a\xc2\x0b\xf7\xbe\x11\x16\xb6\xc6\x9a\x78\xc9\x87\x28\x38\x6b\xa6\x99\x8e\xa4\x7c\xd5\xd9\x9a\x29\xc0\xdc\x5a\x96\xe3\x9d\x49\xb7\xfb\x64\xc5\x1d\xb3\xb2\x94\x35\xa0\xf2\x17\xde\xca\xfa\x6f\x1b\x9f\xd9\x1a\xff\x2b\x7d\xab\x89\xc0\xd1\xa8\x6d\x84\x39\x2a\x7e\xc6\x6f\xde\x7b\x3f\x63\x61\x0f\xcf\xac\x8f\xb7\x97\x27\x47\x7a\x85\x91\x5d\xce\xf7\x7b\x82\xb8\x43\x51\x89\x29\x78\x70\x0f\x61\x19\xec\x6b\xd5\x5c\xf5\x04\x2c\x72\x88\x87\x66\xcd\x24\xac\x55\x12\xd0\x32\xfa\x7f\xa8\x8b\xbb\xb7\xa6\x5b\xf3\x13\x00\x00\xff\xff\xcf\x9c\x8c\x96\xf7\x00\x00\x00")

func generatorsTemplatesCase_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_get_by_idTemplate,
		"generators/templates/case_get_by_id.template",
	)
}

func generatorsTemplatesCase_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_get_by_id.template", size: 247, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x3c\x8f\xd1\x6a\xc4\x20\x10\x45\x9f\x23\xf8\x0f\x43\x9e\x12\x58\x92\x8f\xd8\xa7\x42\xa1\x1f\x50\x4a\x18\x26\xb3\xc1\x36\xab\xa2\x23\xdd\xad\xf8\xef\x45\x13\xf6\x49\x94\x7b\xcf\x3d\x7a\xa4\x1f\xdc\x18\x72\xb6\x78\xe7\x52\x16\xc2\xc8\x5a\x69\x65\xee\xde\x05\x81\x41\xab\xae\x27\x67\x85\x1f\xd2\x6b\xd5\x6d\xd0\xe7\xec\x83\xfb\x66\x92\xe5\xa8\xcc\xb8\xa2\x17\x0e\x71\xde\x50\xf8\x17\x9f\x71\x7e\xd1\xce\x97\x5e\xab\xb1\x42\xe5\xe9\x19\xde\x4d\x94\x37\xeb\x93\x40\x94\x90\x48\x20\x6b\xd5\xe5\x7c\x33\xbc\xaf\x71\x71\x5e\x8c\xb3\xb8\x97\xa2\x55\xa9\x9d\x5b\xb2\x04\x03\x9d\x86\x0b\xa1\x37\x82\xbb\xf9\xe3\xb5\x94\x2b\x46\x1e\x1b\x70\x20\x79\xc0\xe9\x39\x5d\x8f\xf3\x02\xa6\xcd\xbc\x06\x47\x18\x3e\xbf\xb6\xa9\xde\x3f\x92\xf8\x24\x17\xe0\x10\x5c\x18\x9b\x42\x60\x49\xc1\x02\x4d\xa7\x74\xcb\x0d\x47\xbc\xd5\x6b\xa8\xcb\xb9\x7d\x77\x69\xe8\x2a\xd9\x95\xb1\x99\xfe\x07\x00\x00\xff\xff\xe0\xdd\xf3\x78\x4a\x01\x00\x00")

func generatorsTemplatesCase_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_listTemplate,
		"generators/templates/case_list.template",
	)
}

func generatorsTemplatesCase_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_list.template", size: 330, mode: os.FileMode(438), modTime: time.Unix(1693025258, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6a\xeb\x30\x10\x86\xd7\x16\xe8\x0e\x83\x57\xf6\x23\xc4\x87\x08\x3c\xe8\xaa\xbd\x81\x99\xca\x13\xa3\xc6\x96\xc4\x68\x4c\x92\x0a\xdd\xbd\xc8\x71\x1c\x28\x5d\x09\x0d\xdf\xaf\xf9\x3f\x05\x34\x17\x1c\x09\x52\x72\x38\x53\xce\xbd\xc1\x48\x5a\x69\x65\xe7\xe0\x59\xa0\xd1\xaa\xaa\x8d\x77\x42\x37\xa9\xb5\xaa\x06\x14\xfc\xc4\x48\x50\xa7\x14\xd8\x7f\x91\x91\xfe\x91\xec\xce\x8c\x33\x5d\x3d\x5f\x62\xf7\xa4\xba\xd1\xf3\x5c\x62\xe3\x1f\x3c\x0e\x18\x84\x38\x76\x23\x0a\x5d\xf1\x1e\xbb\xbd\xc4\x36\xa9\xb5\x6a\x4b\x17\xb9\x07\x82\x0f\x1c\xad\x43\xa1\xff\x76\x12\x62\x88\xc2\x8b\x11\x48\x5a\x55\x29\x9d\x2d\x4d\x43\xec\x7d\x10\xeb\x1d\x4e\x39\x6b\x95\x4b\xf0\xbc\x38\x03\x8d\xd9\xec\x7a\x83\xc1\x0a\x4e\xf6\x9b\x86\x9c\x4f\x18\xa9\xdd\x5f\x6d\x8c\xdc\x60\xf3\x3c\x9e\x1e\xe7\x01\xac\x0b\x8b\xfc\xda\x7c\x80\xb0\xdd\xe1\xa9\x79\x7c\x12\x6f\x85\x6f\xa1\xf9\x37\xee\xa3\xf7\x45\xc2\x22\x07\x20\x66\xcf\xed\xda\x97\x49\x16\x76\x60\x8e\x9b\xe6\xce\x36\xaf\xd8\x63\x57\xa1\xab\x94\xd6\x9f\xea\xd7\x32\x45\xad\xca\xaf\x0e\xed\x6a\xfa\x13\x00\x00\xff\xff\x3c\xe4\x96\xea\xc6\x01\x00\x00")

func generatorsTemplatesCase_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_paginateTemplate,
		"generators/templates/case_paginate.template",
	)
}

func generatorsTemplatesCase_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_paginate.template", size: 454, mode: os.FileMode(438), modTime: time.Unix(1693031476, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesCase_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6b\x84\x30\x10\x85\xcf\x06\xf2\x1f\x06\x4f\x0a\xa2\x3f\x62\xa1\xe7\x9e\x7a\x95\x69\x1c\x6d\xda\xac\x09\xc9\xd8\xee\x36\xe4\xbf\x17\x4d\x58\x5c\xe8\x29\x10\xde\x7b\xdf\x7b\xe3\x50\x7d\xe1\x42\x10\xe3\x8a\x57\x4a\x69\x54\x18\x48\x0a\x29\xf4\xd5\x59\xcf\xd0\x48\x51\xd5\xca\xae\x4c\x37\xae\xa5\xa8\x16\xa8\x63\x74\xde\x7e\x92\xe2\x31\x5b\x06\x9c\xd0\x31\xf9\x30\x2c\xc8\xf4\x83\xf7\x30\x3c\xd2\xca\x4f\x2d\x45\xbb\x87\xf2\xdd\x11\xbc\x22\xab\x8f\x17\x6d\x98\x3c\x04\xf6\x9b\x62\x88\x52\x54\x31\xce\x9a\xcc\x14\x46\xeb\x58\xdb\x15\x4d\x4a\x52\xa4\x67\xd7\x1b\x9a\x8d\xc2\x7f\xae\x87\x78\xde\x56\x05\x8d\x2a\x83\x46\x85\x4e\x33\x1a\xfd\x4b\x53\x4a\x17\x0c\xd4\xe6\xa4\x46\xf1\x0d\xca\xae\xfe\x92\xdf\x0e\xe6\xdc\xea\xd4\xb0\x83\xef\xcc\x3c\xf1\x5b\x68\xde\xad\x35\x1d\x90\xf7\xd6\xb7\x47\x0f\x4f\xbc\xf9\x15\x54\x5f\x16\xf7\x99\xb2\xf4\xa7\xac\x5d\x57\xc5\x78\x9c\x6b\xcc\xa8\xbd\x76\x95\x3a\x28\xba\x9c\xff\xa4\xcb\xf8\xa2\x6b\x8f\x91\x7f\x01\x00\x00\xff\xff\x0d\x68\x23\x9c\xb4\x01\x00\x00")

func generatorsTemplatesCase_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesCase_patchTemplate,
		"generators/templates/case_patch.template",
	)
}

func generatorsTemplatesCase_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesCase_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/case_patch.template", size: 436, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x8e\xc1\xaa\xc2\x30\x10\x45\xd7\x0d\xe4\x1f\x86\x2e\x1e\xed\x5b\xbc\x7e\xc4\xdb\xfb\x0b\x65\x18\x47\xa9\xb6\x49\x98\x4c\x10\x0d\xf9\x77\xa9\x56\x45\x10\xc5\xfd\x3d\xf7\x9c\x80\xb4\xc7\x2d\x43\xce\x0e\x27\x2e\xa5\x27\xef\x54\xfc\x38\xb2\x58\x63\xcd\x30\x05\x2f\x0a\x8d\x35\x55\x9d\x73\x10\xbf\x63\xd2\xfe\x3a\xed\x52\x64\xc2\xc8\xb1\x7b\xc0\x18\xb9\xb6\xa6\x9d\x51\x3d\x86\xdb\x6d\x4f\x18\x06\xc5\x71\x38\xf1\xba\x94\xff\xbb\x01\xa2\x4a\x22\x85\x6c\x4d\xb5\x9c\xc1\xd3\xd7\xdf\x4b\x1e\x23\x5b\x53\x66\xc7\x26\x39\x82\x15\x1f\x9a\xef\xe8\x16\x7e\x3f\x84\xcd\x45\xc2\x9a\xc4\xc1\xcf\xfb\x69\x5e\xd4\xe5\x92\x74\x0e\x00\x00\xff\xff\xe8\xa8\xf1\x43\x4f\x01\x00\x00")

func generatorsTemplatesController_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiberTemplate,
		"generators/templates/controller_fiber.template",
	)
}

func generatorsTemplatesController_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber.template", size: 335, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x90\xbd\x4e\xc3\x30\x14\x85\xe7\x58\xf2\x3b\x98\x0c\x28\x46\x95\x23\x31\x82\xba\xd0\x09\x06\x18\x2a\xb1\x46\xae\x73\x93\x9a\x26\x76\x74\x73\x03\x81\xc8\xef\x8e\x9c\x94\x96\x1f\x31\x9f\xf3\xdd\xcf\xc7\x9d\x36\x07\x5d\x83\x98\x26\xa7\x5b\x08\xa1\x30\xde\x11\xfa\xa6\x01\xe4\x8c\x33\xdb\x76\x1e\x49\x64\x9c\x25\xe9\x34\x75\xe8\x5f\xc0\x50\xb1\x54\xf3\xa1\x07\xa3\x7b\xe8\xf3\x33\xac\x7b\x48\x39\x4b\x2a\xbb\x03\x2c\x2a\xd4\x2d\xbc\x79\x3c\x88\xbf\xec\x29\xeb\xf3\x3d\x51\x97\xcf\x44\x1a\x95\x49\x5a\x5b\xda\x0f\x3b\x65\x7c\x9b\xd7\x7e\x0e\x96\x38\x7f\xbd\x4e\x39\x93\xb1\x54\x0d\xce\x88\xcc\x1c\x9f\x5d\x18\xdd\x59\xd2\x8d\xfd\x80\x32\x84\xcd\x69\x81\x14\x1b\x04\x4d\x90\x19\x1a\xc5\xd5\x7c\x43\x6d\x68\x94\x02\x10\x3d\x8a\x89\xb3\xa4\xd4\xa4\xc5\xcd\x5a\x5c\xfe\xd8\xa0\x16\xee\xde\x75\x03\x4d\x81\xb3\xc4\x56\x91\x89\xc5\x5f\xd3\xd4\xb3\x6e\x6c\xa9\x09\xee\x7c\xf9\x9e\xc5\x6b\x2b\x61\x68\x94\xb7\x73\xff\x62\x2d\x9c\x6d\x66\x51\x82\x40\x03\xba\x18\xaa\x87\xed\xd3\x63\x06\x88\x92\xb3\x24\xcc\x9b\x6d\xb9\xfa\x12\x18\x75\xfc\x57\x75\x7e\xbc\x8a\x9b\x60\xa4\x4c\xae\x44\x74\xc8\x05\xaa\xfe\x93\x00\xe2\xe9\xf4\x37\xef\x16\x5c\xb9\x25\xb4\xae\xce\x6c\x29\x39\x0b\x9c\x7d\x06\x00\x00\xff\xff\xa4\x64\xc8\x65\x00\x02\x00\x00")

func generatorsTemplatesController_fiber_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_createTemplate,
		"generators/templates/controller_fiber_create.template",
	)
}

func generatorsTemplatesController_fiber_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_create.template", size: 512, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x41\x6a\xf3\x30\x10\x46\xd7\x12\xe8\x0e\xf3\x7b\x25\xfd\x04\xc5\x84\xac\x0a\x59\xa5\x07\x28\xe4\x00\x41\x91\xc6\xae\xa8\x2d\x19\x79\x5c\x4c\x8d\xee\x5e\xa4\xa6\x29\x85\x6e\xb4\x10\xef\x7b\x6f\x26\x63\xdf\x4c\x8f\xb0\x6d\xc1\x8c\x98\xf3\xd5\xc6\x40\x29\x0e\x03\x26\xc1\x05\xf7\xe3\x14\x13\x81\x14\x9c\x35\xbd\xa7\xd7\xe5\xa6\x6d\x1c\xf7\x7d\xec\xfc\x0d\xd3\xfe\xeb\x7d\x3f\x34\x82\xab\x82\x77\x4b\xb0\x20\xed\xdd\x76\xb5\x66\xf2\x64\x06\xff\x81\x2e\xe7\xf3\x43\xac\xe0\x19\x07\x24\x94\x96\x56\xf8\x5f\x1d\xfa\x4c\xab\x02\x4c\x29\x26\xd8\x04\x67\xde\xc1\xd3\x09\x2c\xad\xfa\xc5\x24\x33\xce\xb2\xf1\xae\x51\x82\x33\x57\x97\x6e\x57\xd8\x8a\xe8\x65\x46\x6b\x66\xd4\x3f\x4e\x5d\x52\xb8\x92\x54\x3b\xf0\xae\x1e\xc6\x7c\x57\x17\xff\x4e\x10\xfc\x50\x13\x2c\x21\x2d\x29\x94\x6f\xc1\x59\xfe\xa6\xee\x81\x5f\x48\x71\x5e\x30\xb8\x0b\x19\x5a\x66\x79\x68\x5b\xf5\x98\xfc\x8d\x1c\xdb\xa3\x12\x3c\x0b\xfe\x19\x00\x00\xff\xff\x26\x59\x9e\x48\x60\x01\x00\x00")

func generatorsTemplatesController_fiber_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_deleteTemplate,
		"generators/templates/controller_fiber_delete.template",
	)
}

func generatorsTemplatesController_fiber_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_delete.template", size: 352, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x64\x8d\xc1\x4a\xc4\x30\x10\x86\xcf\x0d\xe4\x1d\xc6\x9e\x12\x59\xb2\x22\x7b\x12\x7a\x71\x05\xd1\x83\x0a\x7d\x80\x25\x9b\x4c\x6b\xb0\x4d\x4a\x3a\x95\x6a\xc9\xbb\x4b\xba\xba\x2c\x78\x99\xc3\xf0\xfd\xdf\x37\x68\xf3\xa1\x5b\x84\x65\xf1\xba\xc7\x94\x0e\x26\x78\x8a\xa1\xeb\x30\x72\xc6\x99\xeb\x87\x10\x09\x04\x67\x45\xd9\x3a\x7a\x9f\x8e\xca\x84\x7e\xdb\x86\xc6\x1d\x31\x6e\x4f\xf7\xf3\xb6\xe4\x4c\x66\xbc\x99\xbc\x01\x61\x7e\x6d\x07\xa3\x07\x47\xba\x73\xdf\x68\x53\xda\x9f\xc5\x12\x1e\x91\xee\xbf\x9e\x1e\x84\xa1\x19\xae\x57\x89\xda\xd3\x2c\x01\x63\x0c\x11\x16\xce\x0a\x67\xe1\xae\x02\x43\xb3\x7a\xd3\x51\xf7\xa3\x28\x9d\x2d\xd7\x46\x61\x35\xe9\x4d\x46\x57\x42\x4d\x23\x1a\x3d\xa2\xba\x70\xaa\xdc\xc2\x99\x84\xdc\x80\xb3\xa7\x95\x6b\xd6\xc9\x55\x05\xde\x75\x6b\xa2\x88\x48\x53\xf4\xf9\xcd\x59\x91\xfe\xa8\xac\x87\xea\x3f\x96\xbd\x35\x7a\x5b\x93\xa6\x69\x14\xbb\x9b\x9d\x3c\xcf\x2e\x90\xe7\xfa\xf5\x45\x64\x87\xe4\x2c\x71\xf6\x13\x00\x00\xff\xff\x3a\x57\x66\xde\x60\x01\x00\x00")

func generatorsTemplatesController_fiber_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_get_by_idTemplate,
		"generators/templates/controller_fiber_get_by_id.template",
	)
}

func generatorsTemplatesController_fiber_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_get_by_id.template", size: 352, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\xcf\x4a\x33\x31\x14\xc5\xd7\x09\xe4\x1d\xf2\xcd\xa2\xcc\x7c\x94\x0c\xb8\x54\xba\xea\x4a\x11\xff\xe0\x03\x94\x34\xde\xa9\xd1\x69\x32\xdc\xdc\xc8\x68\xc8\xbb\x4b\x32\xb5\xe2\xc6\x4d\x16\xe1\x9c\xdf\xf9\x71\x27\x6d\xde\xf4\x01\x64\x4a\x4e\x1f\x21\xe7\x9d\xf1\x8e\xd0\x8f\x23\xa0\xe0\x82\xdb\xe3\xe4\x91\x64\x2b\x38\x6b\x52\x9a\xd0\xbf\x82\xa1\xdd\x12\xed\x63\x00\xa3\x03\x84\xfe\xa7\xac\x03\x34\xa5\xc7\x9a\x83\xa5\x97\xb8\x57\xc6\x1f\xfb\x83\x1f\xec\x1e\xb0\x5f\xde\xf7\x8b\x46\xf0\xae\x84\x86\xe8\x8c\x6c\xcd\x69\x7b\x67\xf4\x64\x49\x8f\xf6\x13\x9e\x73\xde\x9e\x35\x3a\x79\x6b\x03\xb5\x86\x66\xf9\xbf\x12\xd4\x96\xe6\x4e\x02\xa2\x47\x99\x04\x67\x83\x1d\x09\x50\x5e\x6e\xe4\xea\x97\x88\x2a\xbd\x6b\x37\x45\x4a\x59\x70\x66\x87\xd2\x29\x31\x43\xb3\x7a\x8c\x80\x1f\x0f\x1a\x03\x60\xbb\x5a\x08\xdd\x55\x0d\xfc\xdb\x48\x67\xc7\x4a\x66\x08\x14\xd1\x95\x6f\xc1\x59\x81\x08\xce\x10\x42\x1c\x69\x7d\x86\xa9\xd3\x19\xd4\xb7\xa6\x2a\xee\x30\x53\xdb\xad\x8b\x71\x45\xd7\x9b\x9c\x0c\xfe\x1a\xa8\xfc\xfa\x55\x40\x37\x4f\xf7\x77\xed\xb2\xd7\x09\x9e\x05\xff\x0a\x00\x00\xff\xff\xfe\x5d\x7c\x71\xae\x01\x00\x00")

func generatorsTemplatesController_fiber_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_listTemplate,
		"generators/templates/controller_fiber_list.template",
	)
}

func generatorsTemplatesController_fiber_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_list.template", size: 430, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x91\xcd\x6e\xd5\x30\x10\x85\xd7\xb6\xe4\x77\x30\x5e\x25\xe8\xca\x91\x58\x56\xea\x02\x55\x42\x82\x05\x14\xf5\x01\x22\x5f\xdf\x49\x30\x4d\xec\x30\x9e\x94\x4b\x23\xbf\x3b\xb2\xf3\x03\x88\x4d\xbb\x89\xe4\xc9\x99\x6f\xe6\xcc\x99\x8c\x7d\x34\x3d\xc8\x65\xf1\x66\x84\x94\x5a\x1b\x3c\x61\x18\x06\x40\xc1\x05\x77\xe3\x14\x90\x64\x25\x38\x53\x91\xd0\x06\xff\xa4\x04\x67\x17\x43\xe6\x6c\x22\x48\xb5\x2c\x13\x86\xef\x60\xa9\x5d\xfb\x9b\x0e\xcd\x08\x3f\x03\x3e\xc6\x66\x57\x35\x7d\xc0\x31\xb7\xfd\xaf\x9e\x23\x58\x13\x21\x36\x7f\xe6\x9b\x08\x2a\x8f\x66\xaa\x77\xf4\x6d\x3e\x6b\x1b\xc6\xa6\x0f\x9d\x3b\x03\x36\xeb\xf7\xe9\x9d\x12\xbc\xce\xa2\x6e\xf6\x56\x56\x76\x5b\xbf\xb5\x66\x72\x64\x06\xf7\x0c\x97\x94\xee\x0e\x27\xb5\xbc\x37\xbd\xf3\x86\xa0\xb2\x74\x95\x6f\x0b\x45\xdf\xd1\xb5\x96\x80\x18\x50\x2e\x82\xb3\xc9\xf4\x70\xca\x6f\x79\x73\x2b\x37\xaf\xfa\x3d\x05\x97\x7b\xf4\xd7\x19\xf0\x57\xa5\xee\x4d\x0f\xaa\xae\x05\x67\xae\x2b\xda\x37\xb7\xd2\xbb\xa1\x00\x18\x02\xcd\xe8\x73\x59\x70\x96\x8a\x87\x0c\x7d\x70\xcf\x2f\x03\x67\xe1\x6b\xe0\xcb\xd2\x39\x18\x2e\xb1\xfd\x91\x19\x29\x09\xce\x3a\x37\x10\x94\x41\xff\x1c\x54\xef\xfe\x3f\x94\xff\x05\x78\x74\x4f\xc1\x79\x02\x2c\xfd\xc7\xd6\x45\x9d\x39\x7b\x88\x07\xe2\xa3\x9f\x66\x2a\x84\xbc\xf3\x8d\x2c\x77\xdb\x9f\xd9\xc2\x5a\x2a\xae\x0f\x22\x42\x9c\x07\x3a\xae\x60\xf5\x16\xbc\xfe\x3b\x18\x9d\x13\x83\x2b\x55\xf5\x49\xae\x46\x4e\x72\x5f\xa5\xa4\xfd\xc2\xbb\x6c\xa5\x4c\xfc\xf4\xf0\xe5\x73\xb5\x0e\xaf\x05\x4f\x82\xff\x0e\x00\x00\xff\xff\xcb\x13\x27\xee\xf0\x02\x00\x00")

func generatorsTemplatesController_fiber_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_paginateTemplate,
		"generators/templates/controller_fiber_paginate.template",
	)
}

func generatorsTemplatesController_fiber_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_paginate.template", size: 752, mode: os.FileMode(438), modTime: time.Unix(1693033155, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesController_fiber_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x51\x4f\x6b\xdb\x30\x14\x3f\x5b\xa0\xef\xa0\xf9\x10\xe4\x11\xe4\x50\x7a\xda\xe8\x65\x85\x1d\x76\xd8\x3a\x02\xbd\x86\x57\xf9\x39\xd1\xea\x58\xe6\xe9\x69\x73\x67\xfc\xdd\x87\x94\xcc\x65\x6d\x46\xaf\x7a\xbf\xff\x1a\xc0\x3e\xc2\x1e\xd5\x34\xf5\x70\xc4\x79\xde\x59\xdf\x33\xf9\xae\x43\x92\x42\x0a\x77\x1c\x3c\xb1\xd2\x52\x14\xe5\x34\x0d\xe4\x7f\xa0\xe5\xdd\x09\x5a\xc7\x80\x16\x02\x86\xfa\x99\x0c\x01\x4b\x29\x8a\xd6\x3d\x20\xed\x5a\x82\x23\xfe\xf2\xf4\xa8\x5e\x73\x97\x5b\xa8\x0f\xcc\x43\x9d\x19\x65\xb2\x2c\xca\xbd\xe3\x43\x7c\x30\xd6\x1f\xeb\xbd\xcf\x87\xd3\xb9\xfe\x79\x55\x4a\x51\x25\x50\x1b\x7b\xab\xb4\x3d\xc7\xde\x59\x18\x1c\x43\xe7\x7e\x63\x33\xcf\xb7\x4b\x83\x4a\xdd\x01\xdb\x83\xb6\x3c\xaa\xf7\x59\xc2\xdc\xf2\x58\x29\x24\xf2\xa4\xa6\x1c\xb4\x63\x24\xf5\xe1\x46\xad\xfe\x29\x61\x32\xf1\x73\xbe\x4e\xb3\x14\x85\x6b\x13\x2b\x01\x2d\x8f\xe6\x7b\x44\x7a\xba\x03\x0a\x48\x7a\x75\xd2\xa8\x3e\x66\xc0\xbb\x1b\xd5\xbb\x2e\x6b\x17\x84\x1c\xa9\x4f\xcf\x52\x14\x73\xee\xd6\x00\x43\x12\xb9\x60\x76\x0f\x5d\xc4\xf0\xc2\xec\xc5\x90\xe6\x1e\x3a\xd7\x00\xe3\x27\xdf\x3c\xe9\x55\x52\x5b\xa7\x40\xff\x37\x4f\x69\xbf\x6c\xbf\x7d\xd5\x48\x54\x2d\x31\xe2\x90\x44\x9a\xf5\xd2\xc9\x9c\xff\xd2\x2c\x83\x99\x34\x23\x8e\xac\xab\x75\xda\x2e\x55\x5c\xab\x64\x98\xf7\xff\x1b\xf1\x8d\xba\xae\x55\x67\xab\x57\xa1\xb6\xd8\x37\x5b\x06\x8e\x41\x5f\x6d\x36\xcf\xd1\x2e\x43\xae\x37\xd7\x95\x14\xb3\x14\x7f\x02\x00\x00\xff\xff\x16\xf8\x8c\x23\xb0\x02\x00\x00")

func generatorsTemplatesController_fiber_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesController_fiber_patchTemplate,
		"generators/templates/controller_fiber_patch.template",
	)
}

func generatorsTemplatesController_fiber_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesController_fiber_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/controller_fiber_patch.template", size: 688, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_adapterTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\x8d\x41\x0e\x82\x30\x10\x45\xd7\x34\xe9\x1d\x26\xac\xd4\x85\x9c\x41\x43\xc2\x31\xc8\xb7\x8c\x04\xb1\xb6\x19\xc6\x10\x6c\x7a\x77\x63\x2a\xbb\xbf\xf8\xef\xbd\x08\x37\x63\x64\x4a\xe9\x05\xcf\x39\xf7\x23\x94\x57\x6c\xd6\x58\x33\xf9\x18\x44\xe9\x60\x4d\x35\x40\x71\xc3\xc2\x54\xa7\x14\x25\x3c\xd8\x69\x5f\x80\xe6\x2e\xf0\xbc\x06\x99\x97\x66\x7f\x35\x63\x10\x5f\x5b\x73\xfc\x59\x74\x8b\x4c\x5d\x10\x5f\x12\xbd\x43\x9c\x14\xcf\xe9\xc3\x43\xce\x5d\xa9\x5d\x06\x44\x65\xa1\x45\xe5\xed\x94\x92\x35\x55\x7b\xa5\xd3\xee\x3b\xb7\xff\x61\x4d\xfe\x06\x00\x00\xff\xff\x25\x7e\x55\xd9\xb1\x00\x00\x00")

func generatorsTemplatesGateway_gorm_adapterTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_adapterTemplate,
		"generators/templates/gateway_gorm_adapter.template",
	)
}

func generatorsTemplatesGateway_gorm_adapterTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_adapterTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_adapter.template", size: 177, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_createTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x6e\xeb\x20\x10\x85\xd7\x46\xe2\x1d\x90\x17\x57\xf6\x55\x84\xf7\x91\xba\x68\x93\x2a\xca\xa6\x9b\x3e\x80\x35\x31\x13\x4a\x63\x7e\x34\x06\x45\x2d\xe2\xdd\x2b\x62\x77\x57\x56\xc0\x1c\x9d\xef\x9b\x00\xd3\x0d\x34\x8a\x9c\x1d\x58\x2c\x65\xd4\x10\xf1\x0e\x5f\x9c\x71\x66\x6c\xf0\x14\x45\xc7\x59\xd3\xe6\x1c\xc8\x7f\xe2\x14\xc7\x35\x37\x5c\x09\x2c\xde\x3d\xdd\x96\x41\x41\x84\x0b\x2c\x38\x68\x4f\x76\xb0\x5e\xe1\xbc\xb4\xb5\xa0\x69\xb5\x89\x1f\xe9\x22\x27\x6f\x07\xed\xbd\x9e\x71\x48\xc9\xa8\x96\xb3\xbe\xce\xaf\xc9\x4d\xa2\xd3\xe2\xff\xc9\x93\x5d\x0d\xc6\x09\x82\x89\x30\x9b\x6f\x54\xa5\x9c\x56\x99\x67\x05\x21\x22\xf5\xe2\x40\x08\x11\x3b\xe3\x42\x8a\xdb\xe3\x5c\xef\xbd\xe8\x96\x48\xc6\xe9\x9d\x40\x22\x4f\xbd\xc8\x9c\x35\x46\x89\xfd\x93\xa8\x40\xf9\x86\xf7\xf7\x47\xa0\x7b\x80\x1b\xc2\x25\xcd\xb1\x8e\xb5\x3c\xbe\xc8\x83\x77\x4e\x6e\xe5\xff\xd6\x05\xe4\x5f\x3e\xb5\xb5\x39\x1f\xf7\x62\x3b\x46\xed\xea\x4f\xce\x50\x0d\xc7\x87\x57\x29\x9c\x35\xe5\x17\x13\x13\xb9\x1a\x13\x2b\x51\xbe\x56\x3d\xce\x0a\x67\x3f\x01\x00\x00\xff\xff\xf8\x39\xc5\x18\x7a\x01\x00\x00")

func generatorsTemplatesGateway_gorm_createTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_createTemplate,
		"generators/templates/gateway_gorm_create.template",
	)
}

func generatorsTemplatesGateway_gorm_createTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_createTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_create.template", size: 378, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_deleteTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xce\xc1\x4a\xc4\x30\x10\xc6\xf1\x73\x03\x79\x87\xa1\x07\x69\xa5\xa4\x9e\x85\x55\x56\x57\xf6\xee\xc5\xe3\x32\xdb\x4c\x63\xdc\x26\x29\x93\x2c\x45\x43\xde\x5d\x6a\xf5\xe6\x79\x86\xef\xff\x9b\x71\xb8\xa0\x21\xc8\xd9\xa3\xa3\x52\x4e\x06\x13\x2d\xf8\x29\x85\x14\xd6\xcd\x81\x13\x34\x52\x54\x75\xce\x33\x87\x0f\x1a\xd2\x69\xfb\xeb\x47\x46\x47\x4b\xe0\x4b\xec\x35\x26\x3c\x63\xa4\xde\x04\x76\xbd\x0b\x9a\xa6\x58\x4b\xd1\xae\x1b\xe3\xd5\x0f\xd0\x18\xb8\x3d\x06\x76\x5b\xe4\x34\xe0\x6c\x13\x4e\xf6\x8b\x74\x29\xc7\xad\xb7\xd7\x38\x27\xe2\x16\x0e\x34\x51\xa2\xc6\x6a\x88\x89\xad\x37\x2d\x34\xe7\x10\xa6\x0e\x88\x39\x70\x0b\x59\x8a\x8a\x29\x5e\xa7\x04\xf7\x3b\x30\xea\xf0\xa4\x9e\x83\xf7\xea\xed\x9d\x98\x56\x6a\x55\x5b\x0d\x3b\x78\xac\x3b\xb0\xba\x93\xa2\x6a\xd5\xef\xe6\xcd\x46\x53\xff\x31\x72\xf9\xe1\x56\x4c\xe9\xca\x1e\xb6\x82\x7a\x0d\x4b\xdc\x8f\x23\x0d\x89\x34\x3c\xc0\x5d\xf7\x77\x78\x59\x31\x52\x14\x29\xbe\x03\x00\x00\xff\xff\xfd\xae\xd8\x1b\x41\x01\x00\x00")

func generatorsTemplatesGateway_gorm_deleteTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_deleteTemplate,
		"generators/templates/gateway_gorm_delete.template",
	)
}

func generatorsTemplatesGateway_gorm_deleteTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_deleteTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_delete.template", size: 321, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_get_by_idTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x90\x41\x6b\xe3\x30\x10\x85\xcf\x16\xe8\x3f\xcc\xfa\x10\xec\x25\xd8\xbb\xd7\x82\x29\x49\xd3\x86\x42\xa1\xd0\x3f\x60\x54\x6b\x6c\xd4\x58\x92\x19\xcb\x84\x54\xe8\xbf\x17\xcb\x26\x90\xb6\x47\x8d\xde\xf7\xde\x9b\x19\x44\x73\x12\x1d\x82\xf7\x46\x68\x0c\xa1\xee\x84\xc3\xb3\xb8\x70\xc6\x99\xd2\x83\x25\x07\x19\x67\x49\xea\xfd\x40\xf6\x03\x1b\x57\x2f\xba\xb2\x25\xa1\xf1\x6c\xe9\x34\x96\x52\x38\xf1\x2e\x46\x2c\x3b\x4b\xba\xd4\x56\x62\x3f\xa6\x9c\xe5\xb3\x47\x3b\x99\x06\xb2\x0e\x8e\x96\xf4\x92\x51\x37\x62\x50\x4e\xf4\xea\x13\x65\x08\xc7\x25\x6e\x27\xc5\xe0\x90\x72\x38\xa2\xdb\x5f\x9e\x0f\x99\x92\x30\x3a\x52\xa6\xcb\x21\xfb\xbb\x0e\x5f\x27\x37\x4c\x6e\x0b\x48\x64\x29\x07\xcf\x59\x62\xe3\x08\xee\x2a\xd8\x2c\xb9\xc5\x6f\x21\x3e\x70\x96\x10\x8e\x53\x1f\xa5\x5d\x71\xd8\x17\x0f\xd6\x98\xe2\x45\x69\xe5\xb2\xff\x79\xf1\xa4\x8c\xcc\xec\xea\x9f\x2a\x09\x15\xdc\xa7\x5b\x50\x32\x2e\x91\xa8\x16\x16\xbc\x78\x9c\xb3\xe1\x4f\x05\x46\xf5\xb1\x41\x42\xe8\x26\x32\xf3\x7b\x7b\x23\xe2\x2c\x09\xdf\xe0\x37\x7b\x1e\x77\x6d\x8b\x8d\x43\x09\x55\x05\xff\x7e\x3a\x18\xd5\x5f\x41\x11\x8f\x22\xe7\xca\x37\x17\x88\x90\xf7\xf1\xbb\x5e\x4a\x87\x70\xa5\x56\xb7\xcd\x4a\xaf\x96\xe1\x2b\x00\x00\xff\xff\xd6\x6c\x11\x1f\xe9\x01\x00\x00")

func generatorsTemplatesGateway_gorm_get_by_idTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_get_by_idTemplate,
		"generators/templates/gateway_gorm_get_by_id.template",
	)
}

func generatorsTemplatesGateway_gorm_get_by_idTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_get_by_idTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_get_by_id.template", size: 489, mode: os.FileMode(438), modTime: time.Unix(1693068324, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_listTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xbb\x6a\xec\x30\x10\x40\x6b\x0b\xf4\x0f\x62\x8b\xc5\x86\x8b\xdc\x5f\x48\x91\x17\x4b\x20\x21\x45\xca\x10\x96\x89\x3d\x36\xce\x5a\x8f\x8c\x46\x2c\x1b\xa1\x7f\x0f\x96\x52\xa4\x48\xa7\x41\x33\xe7\x1c\x0f\xc3\x09\x66\x54\x29\x59\x30\x98\xf3\x71\x06\xc6\x33\x5c\xa4\x90\x62\x31\xde\x11\xab\x56\x8a\x66\x97\x92\x27\xf7\x81\x03\x1f\xeb\x5e\x3f\x11\x18\x3c\x3b\x3a\x85\x7e\x04\x86\x77\x08\xd8\xcf\x8e\x4c\x6f\xdc\x88\x6b\xd8\x49\xd1\x6d\x8c\x29\xda\x41\xb5\xb3\x3a\x38\x32\xd5\x71\x1c\xc0\x2f\x0c\xeb\xf2\x85\x63\xce\x87\xaa\xbb\x1e\xc1\x33\x52\xa7\x1e\x97\xc0\xed\xb4\xac\x8c\x54\xde\x0f\xd6\x47\xee\x54\xfb\xfa\xb6\x4d\xcf\x91\x7d\xe4\x7f\x0a\x89\x1c\x75\x2a\x49\xd1\x7c\x46\xa4\x8b\xfa\x7f\xa5\x66\x7d\x77\xa3\x6f\x9d\xb5\xfa\x69\x2b\x68\xf7\x35\x44\xff\x65\x4d\xb9\xc4\x35\x29\x55\x55\xc8\xb9\xcc\xae\xf0\x37\xda\x6f\x5f\xca\x52\x34\x84\x21\xae\xe5\xab\x18\xf5\xcb\x00\xb6\xdd\xd7\x83\x0a\x23\xe4\x48\x56\xb9\x9f\xc6\x7a\xa0\xef\xb7\x54\x29\xb2\x14\xdf\x01\x00\x00\xff\xff\x0f\x2a\xeb\xd0\x6b\x01\x00\x00")

func generatorsTemplatesGateway_gorm_listTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_listTemplate,
		"generators/templates/gateway_gorm_list.template",
	)
}

func generatorsTemplatesGateway_gorm_listTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_listTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_list.template", size: 363, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_paginateTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x92\x41\x8f\xd3\x30\x10\x85\xcf\xb1\xe4\xff\x30\xec\xa1\x72\x50\x94\xee\x01\x71\xa8\xd4\xc3\xd2\x85\x15\x87\x15\x2b\xf6\x88\x50\x35\x24\x93\xc8\x6c\x62\x07\xc7\xa1\xec\x5a\xfe\xef\xc8\x76\xd2\xaa\xd0\x03\xa2\xb7\x19\x3f\xfb\xbd\xef\xa5\x03\x56\x4f\xd8\x12\x38\xa7\xb0\x27\xef\xf7\x2d\x5a\x3a\xe0\x33\x67\x9c\xc9\x7e\xd0\xc6\x82\xe0\x2c\xab\xd1\xe2\x37\x1c\x09\xae\x9c\x1b\x8c\xfe\x4e\x95\xdd\xa7\x0b\xeb\xc6\x60\x4f\x07\x6d\x9e\xc6\xf5\xa2\x5a\xb7\xda\xf4\x57\x9c\x65\xff\xae\x5e\xf7\xba\xa6\x6e\xbc\xe2\x2c\x0f\xd6\xcd\xa4\x2a\x10\x2d\xdc\x69\xd3\xa7\x68\xfb\x0a\x07\x69\xb1\x93\x2f\x54\x7b\x7f\x97\x52\xde\xd4\x38\x58\x32\x39\x3c\x60\x2b\x15\x5a\x12\x8d\xec\x2c\x99\xe3\xfc\x21\x8e\x05\x0c\xf3\x0c\x8b\x69\xb9\x28\x3e\xaa\x61\xb2\x39\x88\xd7\xcb\xe2\xd3\x64\x87\xc9\x16\x40\xc6\x68\x93\x83\x9b\xe9\x61\xb3\x85\x2f\x5f\x17\xd1\x2d\x5a\x74\x3e\x24\xcd\x7e\x4c\x64\x9e\xc3\x69\x5b\xde\xbe\x2b\x77\x5a\xa9\xf2\x3e\xb0\x88\x55\x42\x2a\x2f\xe5\x77\x3e\x62\x66\xce\xa5\xc0\xa3\x4f\x8f\xfd\x44\x03\x95\x9e\x94\x05\xa9\xec\xdb\x37\x9c\x65\x86\xc6\xa9\xb3\xe1\xfd\x68\x54\xee\xc2\xa9\x58\x45\x51\xce\x59\x26\x1b\x48\x92\xf2\x7d\x08\x0c\xaf\xb6\xa0\x64\x17\x63\x67\x86\xec\x64\x54\x98\x8b\x33\x11\x67\x59\xb2\x3b\x5d\xfe\xac\x0f\xe3\x4d\xd3\x50\x65\xa9\x86\xed\x16\xae\xcf\x5e\x58\x9d\x97\x13\x8f\xb2\xd0\xc1\x06\xc2\x2f\xf4\x53\xc4\xdd\x3d\xfe\x7a\xc0\x96\xc6\x0d\x5c\xc7\x85\x2f\x82\xfb\xd1\xef\xaf\xf6\x45\x84\x3a\x7d\x9f\xd4\xca\xcc\xbc\x20\x3f\x56\xa8\xc4\x2a\xdc\xcd\xff\x48\xfd\x1f\xc8\x3a\x12\x84\x3e\x2f\x41\x5d\x60\x3a\x21\x1d\xd3\xef\xb0\xab\x96\xb5\x88\x5f\xe2\x44\x10\xd0\xe8\x51\xbe\x50\x5e\x1c\x3d\xe7\x50\x7a\xfe\x67\xc5\x46\x3c\x67\xbf\x03\x00\x00\xff\xff\x24\x7c\x5d\x03\x7c\x03\x00\x00")

func generatorsTemplatesGateway_gorm_paginateTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_paginateTemplate,
		"generators/templates/gateway_gorm_paginate.template",
	)
}

func generatorsTemplatesGateway_gorm_paginateTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_paginateTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_paginate.template", size: 892, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_gorm_patchTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\x4d\x4b\xf4\x30\x10\xc7\xcf\x1b\xc8\x77\x18\x7a\x78\x48\x1e\x96\xd4\xb3\xa0\xb0\xbe\xed\x49\x10\x45\xaf\xcb\x6c\x3a\xad\x75\xd3\xa6\x4c\xa6\x14\x2d\xfd\xee\xd2\x0d\x7a\xf2\xf6\x9f\x17\xfe\xbf\xdf\x80\xfe\x84\x0d\xc1\x3c\xf7\xd8\xd1\xb2\x1c\x1a\x14\x9a\xf0\x53\x2b\xad\xda\x6e\x88\x2c\x60\xb4\xda\x14\xf3\x3c\x70\xfc\x20\x2f\x87\xfc\x57\xd6\x8c\x1d\x4d\x91\x4f\xa9\xac\x50\xf0\x88\x89\xca\x26\x72\x57\x76\xb1\xa2\x90\x0a\xad\xec\xda\x51\x8f\xbd\x07\xd3\xc0\x3e\x72\x97\x19\x07\x8f\x43\x2b\x18\xda\x2f\xaa\x96\x65\x9f\x71\xbb\x0a\x07\x21\xb6\xf0\x84\xe2\xdf\x4d\xdd\x06\x21\xce\xc3\xc3\x39\x6f\xa1\xa7\xe9\x0d\xc3\x48\x29\xaf\x73\xb6\x60\x8e\x31\x86\x2d\x10\x73\x64\x0b\xb3\x56\x1b\xa6\x34\x06\x81\xcb\x2b\x68\xdc\xdd\x8d\xbb\x8d\x7d\xef\x1e\x57\x29\xf3\x2f\xbb\xb9\xbf\x44\xe6\xc5\xba\x17\x0a\xe4\xc5\x14\xff\x0b\xeb\x5e\x87\x0a\x85\x92\xf9\xc5\xda\x73\xb5\x8c\xdc\x43\x26\xb8\xe7\x38\xa5\x5d\x5d\x93\x17\xaa\xe0\x1a\x2e\xb6\x3f\x87\xfb\x55\x46\xab\x45\xab\xef\x00\x00\x00\xff\xff\xfc\x84\x2a\x5c\x5f\x01\x00\x00")

func generatorsTemplatesGateway_gorm_patchTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_gorm_patchTemplate,
		"generators/templates/gateway_gorm_patch.template",
	)
}

func generatorsTemplatesGateway_gorm_patchTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_gorm_patchTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_gorm_patch.template", size: 351, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGateway_interfaceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x8d\x4d\x0a\x83\x30\x10\x46\xd7\x06\x72\x87\xe0\x4a\x57\x1e\xa3\xc7\x90\x69\x1c\x6d\x6a\xf3\xc3\x38\x22\x76\x98\xbb\x97\x56\x14\xba\x7d\xbc\xef\x7d\x05\xfc\x0c\x13\x3a\x91\x04\x11\x55\xfb\x09\x18\x37\xd8\xad\xb1\x26\xc4\x92\x89\x5d\x63\x4d\x35\x00\xc3\x1d\x16\x74\xb5\x48\xa1\xfc\x44\xcf\xfd\x31\xe8\x46\x82\x88\x5b\xa6\x79\xe9\x4e\xab\x9b\x32\xc5\xda\x9a\xf6\x5b\xe1\xbd\x9c\xf9\xde\x43\x09\x0c\xaf\xf0\xc6\x41\xf5\x76\x3c\xb9\x90\x18\x69\x04\x8f\x4e\xac\xa9\x44\x22\xf2\x23\x0f\xff\x6e\x73\xe1\x90\xca\xca\xaa\xad\xbb\x48\x5e\xf9\x87\xac\xd1\x4f\x00\x00\x00\xff\xff\x2e\x0e\x46\xcd\xce\x00\x00\x00")

func generatorsTemplatesGateway_interfaceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGateway_interfaceTemplate,
		"generators/templates/gateway_interface.template",
	)
}

func generatorsTemplatesGateway_interfaceTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGateway_interfaceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gateway_interface.template", size: 206, mode: os.FileMode(438), modTime: time.Unix(1693116511, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesGorm_modelTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\xcd\x3b\xae\xc3\x20\x10\x85\xe1\xda\x48\xec\x61\x44\x65\x6f\xc1\xf5\x6d\x6e\x93\x2a\xbd\x3d\x81\xb1\x85\x02\x18\xf1\x28\x12\x34\x7b\x8f\xb0\x9c\x2e\xa7\x3f\xff\x17\x51\x3f\x71\x27\xf0\x87\x21\x97\xa5\x90\xa2\xbc\x22\x41\x6b\x01\x3d\x2d\x1a\xa3\x2d\xe8\xec\x9b\x0c\x33\xe4\x92\xaa\x2e\xd0\xa4\x18\xfe\xff\xe0\x5a\x2e\xc9\x86\x1d\xd6\xfd\x48\x7e\x56\xfd\x3c\xd7\x6a\x8d\x5a\xa5\x18\x5a\xdb\x2c\x39\x93\x97\xb3\xce\x2c\x05\x77\x61\xab\x41\xc3\xe8\x7f\x22\x13\xdc\xf1\xe1\xe8\x86\x9e\xc6\xe9\x1b\xef\x62\xa2\x52\x53\x00\x75\x9d\xa2\xab\x09\x1d\xb3\x3a\x9b\x9f\x00\x00\x00\xff\xff\x19\x45\x08\xbb\xc6\x00\x00\x00")

func generatorsTemplatesGorm_modelTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesGorm_modelTemplate,
		"generators/templates/gorm_model.template",
	)
}

func generatorsTemplatesGorm_modelTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesGorm_modelTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/gorm_model.template", size: 198, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesHttp_interfaceTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xc1\x09\xc3\x30\x0c\x05\xd0\x73\x05\xda\x41\xc7\x76\x93\x1e\x0b\xf6\x02\xc2\xa8\xae\x29\xd8\xe2\xe7\x13\x08\x21\xbb\xe7\xa5\xb7\xbf\xf7\xb0\x1f\x99\x2a\x2a\x3c\x32\xec\x5d\xeb\xa7\x04\xf6\x80\x8d\xc9\xc0\xd7\x5b\xd8\xa9\xf2\x28\x74\xf0\x99\x0b\xb4\x8d\x18\xb3\xbf\x2c\x80\x05\x95\x4b\xe5\x0e\x00\x00\xff\xff\xe4\x5c\x26\xc2\x4b\x00\x00\x00")

func generatorsTemplatesHttp_interfaceTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesHttp_interfaceTemplate,
		"generators/templates/http_interface.template",
	)
}

func generatorsTemplatesHttp_interfaceTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesHttp_interfaceTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/http_interface.template", size: 75, mode: os.FileMode(438), modTime: time.Unix(1693179071, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesHttp_singletonTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2a\x48\x4c\xce\x4e\x4c\x4f\x55\xc8\x28\x29\x29\xe0\xe5\xe2\xe5\x2a\x4b\x2c\x52\x08\xce\xcc\x4b\xcf\x49\x2d\xc9\xcf\x53\xb0\x55\xc8\x4b\x2d\xaf\xae\x06\x49\xc6\xa7\x15\x25\xe6\xa6\x96\xe7\x17\x65\xc7\x27\x27\x16\x64\x96\x24\xe6\x64\x56\xa5\xa6\xd4\xd6\x6a\x68\xf2\x72\x01\x02\x00\x00\xff\xff\xca\x2e\x73\xaa\x45\x00\x00\x00")

func generatorsTemplatesHttp_singletonTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesHttp_singletonTemplate,
		"generators/templates/http_singleton.template",
	)
}

func generatorsTemplatesHttp_singletonTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesHttp_singletonTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/http_singleton.template", size: 69, mode: os.FileMode(438), modTime: time.Unix(1693179622, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesParse_body_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x93\xc1\x6e\x9b\x4c\x10\xc7\xcf\x20\xf1\x0e\x13\xa4\x7c\x86\x7c\x0e\x6e\x7a\xa4\xe2\x92\xaa\x91\x7a\x68\x14\xc5\x56\x2e\x51\x54\x4d\x60\xa0\xab\xc2\x42\x77\x17\x37\x56\xea\x77\xaf\x76\x16\x03\x8e\x73\xab\x0f\xd6\xce\xcc\xce\xcc\x7f\x7e\xcc\x76\x98\xff\xc4\x8a\xa0\x43\xa5\x49\x05\x7e\xe0\x8b\xa6\x6b\x95\x81\x28\xf0\xbd\x90\x94\x6a\x95\x0e\xed\xb1\x6c\x4c\x68\xc3\x5e\x58\x09\xf3\xa3\x7f\x4e\xf2\xb6\x59\x55\xed\x65\x57\xe3\xae\x52\x6d\x2f\x8b\xd5\x16\x6b\x51\xa0\x69\xd5\x6a\x7b\xf5\x21\x3c\xb9\x5a\x8a\x67\x52\x2b\xf7\xbf\xfd\x18\x06\x7e\x6c\xeb\x99\x5d\x47\xf0\xc5\xf6\xb9\x27\xdd\xb5\x52\x13\x68\xa3\xfa\xdc\xc0\x6b\xe0\x7b\x37\x28\x6a\x2a\x6e\x04\xd5\x85\x75\x0b\x59\x05\xbe\xb7\xc1\x0a\x0e\xbf\xd1\xf9\x80\x75\x4f\x6f\x9c\x7b\xdb\x60\x8b\x0a\x06\x65\x04\x19\x8c\x22\x93\x5b\xfa\x1d\xb1\x84\xb2\x97\xf9\x78\x65\xcd\xcd\x23\x0d\x42\x1a\x52\x25\xe6\xf4\xba\x8f\xe1\xf1\xe9\xe2\x58\xa3\x15\x47\x4a\x41\x3a\x56\xa4\xe4\x90\xca\x45\x3d\x51\x82\xbd\x90\x65\x20\x45\xcd\xf7\x3d\x45\xa6\x57\xd2\xda\x81\xef\xb1\x38\xcf\xaa\x73\x94\x4f\x7a\x04\xbe\x57\xb6\x0a\xbe\x2f\x61\x68\xa4\x50\x56\x64\x8d\x24\x9a\xa6\x78\x70\x27\xd1\x4a\x4e\xd6\xb1\x6b\x45\x36\xe1\xbf\xa3\x7a\xec\x9f\x13\x4d\xb9\x16\x1f\xa3\x78\xc9\xd1\x0d\x56\xe9\xc8\xd6\x46\x37\x58\x1d\x62\x4c\x38\x9d\xc5\xee\x50\x61\x33\x44\xdd\x34\xde\x30\x4a\x06\xd8\x75\x24\x8b\xc8\xd9\x4b\xa0\x78\x9c\x78\x80\xe0\x22\xc3\x37\xe2\x2f\xc0\x2b\x78\xa4\xd8\xa6\x9f\x72\x89\x5d\x2e\xcf\x39\xe0\xfb\xa6\xab\x69\x13\x6a\xd4\xe6\xab\x2c\xe8\xc5\x22\xa8\x49\x72\x95\x18\x2e\xe1\x8a\xfb\x5b\xa6\xe2\x94\xa9\x1e\xb8\xb9\x62\xff\x67\x50\x36\x26\x59\x77\x4a\x48\x53\x46\x3c\x7f\xf8\x78\xae\x9f\x52\x58\x9c\x6f\x17\xf0\x07\x6e\x89\x0a\x0d\xa6\x05\xd1\x74\x35\x35\x24\x0d\x2c\xce\xf5\x22\x74\xac\x18\xec\x44\x7a\x72\x32\xc4\xc9\xdc\x60\xc5\x86\x5b\x19\xbb\x33\x93\xfa\xb3\x0c\x84\x13\x35\x53\x15\x02\xca\x02\xc2\x01\xf9\x7b\x48\x79\xaf\x5d\x42\x3c\xc7\x7b\x67\xf1\x5e\xb7\xc5\x2e\xca\xe1\x82\x5f\x61\xf2\xd9\xbc\x2c\xa1\x40\x83\xc7\xcb\x3e\xe1\x1d\x76\x38\xcd\x20\x4f\x6c\x2a\xd7\x50\x91\x4d\x89\x3f\x71\xe8\x6c\xb6\xde\x79\xb2\x36\x68\x7a\x1d\xb9\xea\xce\xb8\xc6\xe2\x9e\x7e\xf5\xa4\x4d\x3c\x7b\x02\xa4\xd4\xa8\x7e\x6a\xf2\xe6\x0d\xfe\x7b\x9b\xf7\x57\xea\x64\x17\xf9\x41\xee\x03\xff\x6f\x00\x00\x00\xff\xff\x95\x5f\x5a\x24\x0d\x05\x00\x00")

func generatorsTemplatesParse_body_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesParse_body_fiberTemplate,
		"generators/templates/parse_body_fiber.template",
	)
}

func generatorsTemplatesParse_body_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesParse_body_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/parse_body_fiber.template", size: 1293, mode: os.FileMode(438), modTime: time.Unix(1693179027, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesRoutes_fiberTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8f\xcd\x6a\xc4\x20\x10\xc7\xcf\x11\x7c\x87\xc1\x53\xb2\x2c\x0a\x3d\x16\x7a\x28\x3d\xf4\x31\x82\x6b\x4d\x62\x37\x66\x06\x63\x5a\xe8\xe0\xbb\x97\xac\x74\xcb\x42\x2e\x1e\xc6\xdf\xff\x8b\xac\xbb\xda\xd1\x43\xc2\x2d\xfb\x55\x0a\x29\x42\x24\x4c\x19\x5a\x29\x1a\xc5\x4c\x09\x3f\xbd\xcb\xfd\x62\xa3\x2f\xc5\x0c\xc9\x46\xff\x8d\xe9\xba\x9a\x29\x67\x32\x43\xb8\xf8\x64\x1c\x2e\x39\xe1\x3c\xfb\xb4\x1a\xe6\x8a\xf6\xff\x47\xb5\xdb\x36\x6a\x0c\x79\xda\x2e\xda\x61\x34\x23\x56\x61\x7d\xbf\x9e\x94\x14\xdd\x0e\x0d\xdb\xe2\xa0\x3a\xf4\xce\x52\xc8\x76\x0e\x3f\xfe\xa3\x94\xd6\x12\xc1\xe9\x86\xeb\x57\xa2\x33\x38\x38\x1d\x24\xe9\x23\xed\xdb\xfd\xbb\x03\x96\xa2\xb9\x4d\x85\xe7\x17\xb0\x44\xfa\x3d\xe1\x46\xad\xba\xd7\x56\xdd\x1f\xa1\x99\xf7\x89\x7d\xf4\x79\xc2\xbd\x82\x32\xea\x0c\x4e\x33\xd7\xcb\x63\x48\x27\x45\x91\xe2\x37\x00\x00\xff\xff\xa0\x8e\x94\x7f\x4e\x01\x00\x00")

func generatorsTemplatesRoutes_fiberTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesRoutes_fiberTemplate,
		"generators/templates/routes_fiber.template",
	)
}

func generatorsTemplatesRoutes_fiberTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesRoutes_fiberTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/routes_fiber.template", size: 334, mode: os.FileMode(438), modTime: time.Unix(1693179012, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _generatorsTemplatesUsecaseTemplate = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8d\x41\x0e\x82\x40\x0c\x45\xd7\x4e\x32\x77\x68\x58\xe9\x46\x0e\xe1\xc2\x9d\x57\x20\xcd\x50\x27\xa8\xc0\xa4\x53\x42\xb0\xe9\xdd\x0d\x82\xae\x24\x71\xdb\xfe\xf7\x5e\xc2\x70\xc7\x48\xa0\xda\x61\x4b\x66\x55\xc0\x4c\xde\x79\xd7\xb4\xa9\x67\x81\x08\x85\x6a\xe2\xfe\x46\x41\xaa\x65\x52\x62\x8d\x49\x88\x73\x19\x51\x68\xc4\x29\x97\x5f\x7a\xbd\x14\xb3\x41\xa6\xf4\xf1\x56\x01\x53\x23\xf8\x68\x9e\x54\x9b\x9d\x30\x13\x64\xe1\x21\x08\xa8\x77\xbb\x15\x82\x78\xfc\xb5\x3e\x2f\x5f\xef\x6c\x96\x5e\x87\x2e\xc0\x85\xc6\xfd\x5f\xd0\x61\xbb\x3f\x87\x99\x64\xe0\x6e\x73\xa3\x6b\xc3\xde\xed\x57\x00\x00\x00\xff\xff\xba\xea\xee\xf9\x2a\x01\x00\x00")

func generatorsTemplatesUsecaseTemplateBytes() ([]byte, error) {
	return bindataRead(
		_generatorsTemplatesUsecaseTemplate,
		"generators/templates/usecase.template",
	)
}

func generatorsTemplatesUsecaseTemplate() (*asset, error) {
	bytes, err := generatorsTemplatesUsecaseTemplateBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "generators/templates/usecase.template", size: 298, mode: os.FileMode(438), modTime: time.Unix(1693013277, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"generators/templates/adapter_fiber.template":              generatorsTemplatesAdapter_fiberTemplate,
	"generators/templates/case_create.template":                generatorsTemplatesCase_createTemplate,
	"generators/templates/case_delete.template":                generatorsTemplatesCase_deleteTemplate,
	"generators/templates/case_get_by_id.template":             generatorsTemplatesCase_get_by_idTemplate,
	"generators/templates/case_list.template":                  generatorsTemplatesCase_listTemplate,
	"generators/templates/case_paginate.template":              generatorsTemplatesCase_paginateTemplate,
	"generators/templates/case_patch.template":                 generatorsTemplatesCase_patchTemplate,
	"generators/templates/controller_fiber.template":           generatorsTemplatesController_fiberTemplate,
	"generators/templates/controller_fiber_create.template":    generatorsTemplatesController_fiber_createTemplate,
	"generators/templates/controller_fiber_delete.template":    generatorsTemplatesController_fiber_deleteTemplate,
	"generators/templates/controller_fiber_get_by_id.template": generatorsTemplatesController_fiber_get_by_idTemplate,
	"generators/templates/controller_fiber_list.template":      generatorsTemplatesController_fiber_listTemplate,
	"generators/templates/controller_fiber_paginate.template":  generatorsTemplatesController_fiber_paginateTemplate,
	"generators/templates/controller_fiber_patch.template":     generatorsTemplatesController_fiber_patchTemplate,
	"generators/templates/gateway_gorm_adapter.template":       generatorsTemplatesGateway_gorm_adapterTemplate,
	"generators/templates/gateway_gorm_create.template":        generatorsTemplatesGateway_gorm_createTemplate,
	"generators/templates/gateway_gorm_delete.template":        generatorsTemplatesGateway_gorm_deleteTemplate,
	"generators/templates/gateway_gorm_get_by_id.template":     generatorsTemplatesGateway_gorm_get_by_idTemplate,
	"generators/templates/gateway_gorm_list.template":          generatorsTemplatesGateway_gorm_listTemplate,
	"generators/templates/gateway_gorm_paginate.template":      generatorsTemplatesGateway_gorm_paginateTemplate,
	"generators/templates/gateway_gorm_patch.template":         generatorsTemplatesGateway_gorm_patchTemplate,
	"generators/templates/gateway_interface.template":          generatorsTemplatesGateway_interfaceTemplate,
	"generators/templates/gorm_model.template":                 generatorsTemplatesGorm_modelTemplate,
	"generators/templates/http_interface.template":             generatorsTemplatesHttp_interfaceTemplate,
	"generators/templates/http_singleton.template":             generatorsTemplatesHttp_singletonTemplate,
	"generators/templates/parse_body_fiber.template":           generatorsTemplatesParse_body_fiberTemplate,
	"generators/templates/routes_fiber.template":               generatorsTemplatesRoutes_fiberTemplate,
	"generators/templates/usecase.template":                    generatorsTemplatesUsecaseTemplate,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//
//	data/
//	  foo.txt
//	  img/
//	    a.png
//	    b.png
//
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"generators": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"adapter_fiber.template":              &bintree{generatorsTemplatesAdapter_fiberTemplate, map[string]*bintree{}},
			"case_create.template":                &bintree{generatorsTemplatesCase_createTemplate, map[string]*bintree{}},
			"case_delete.template":                &bintree{generatorsTemplatesCase_deleteTemplate, map[string]*bintree{}},
			"case_get_by_id.template":             &bintree{generatorsTemplatesCase_get_by_idTemplate, map[string]*bintree{}},
			"case_list.template":                  &bintree{generatorsTemplatesCase_listTemplate, map[string]*bintree{}},
			"case_paginate.template":              &bintree{generatorsTemplatesCase_paginateTemplate, map[string]*bintree{}},
			"case_patch.template":                 &bintree{generatorsTemplatesCase_patchTemplate, map[string]*bintree{}},
			"controller_fiber.template":           &bintree{generatorsTemplatesController_fiberTemplate, map[string]*bintree{}},
			"controller_fiber_create.template":    &bintree{generatorsTemplatesController_fiber_createTemplate, map[string]*bintree{}},
			"controller_fiber_delete.template":    &bintree{generatorsTemplatesController_fiber_deleteTemplate, map[string]*bintree{}},
			"controller_fiber_get_by_id.template": &bintree{generatorsTemplatesController_fiber_get_by_idTemplate, map[string]*bintree{}},
			"controller_fiber_list.template":      &bintree{generatorsTemplatesController_fiber_listTemplate, map[string]*bintree{}},
			"controller_fiber_paginate.template":  &bintree{generatorsTemplatesController_fiber_paginateTemplate, map[string]*bintree{}},
			"controller_fiber_patch.template":     &bintree{generatorsTemplatesController_fiber_patchTemplate, map[string]*bintree{}},
			"gateway_gorm_adapter.template":       &bintree{generatorsTemplatesGateway_gorm_adapterTemplate, map[string]*bintree{}},
			"gateway_gorm_create.template":        &bintree{generatorsTemplatesGateway_gorm_createTemplate, map[string]*bintree{}},
			"gateway_gorm_delete.template":        &bintree{generatorsTemplatesGateway_gorm_deleteTemplate, map[string]*bintree{}},
			"gateway_gorm_get_by_id.template":     &bintree{generatorsTemplatesGateway_gorm_get_by_idTemplate, map[string]*bintree{}},
			"gateway_gorm_list.template":          &bintree{generatorsTemplatesGateway_gorm_listTemplate, map[string]*bintree{}},
			"gateway_gorm_paginate.template":      &bintree{generatorsTemplatesGateway_gorm_paginateTemplate, map[string]*bintree{}},
			"gateway_gorm_patch.template":         &bintree{generatorsTemplatesGateway_gorm_patchTemplate, map[string]*bintree{}},
			"gateway_interface.template":          &bintree{generatorsTemplatesGateway_interfaceTemplate, map[string]*bintree{}},
			"gorm_model.template":                 &bintree{generatorsTemplatesGorm_modelTemplate, map[string]*bintree{}},
			"http_interface.template":             &bintree{generatorsTemplatesHttp_interfaceTemplate, map[string]*bintree{}},
			"http_singleton.template":             &bintree{generatorsTemplatesHttp_singletonTemplate, map[string]*bintree{}},
			"parse_body_fiber.template":           &bintree{generatorsTemplatesParse_body_fiberTemplate, map[string]*bintree{}},
			"routes_fiber.template":               &bintree{generatorsTemplatesRoutes_fiberTemplate, map[string]*bintree{}},
			"usecase.template":                    &bintree{generatorsTemplatesUsecaseTemplate, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
